/* Initialize */

@font-face {
  font-family: "rma-icons";
  src: url("../fonts/rma-icons.eot");
  src: url("../fonts/rma-icons.eot?#iefix") format("eot"), url("../fonts/rma-icons.woff2") format("woff2"), url("../fonts/rma-icons.woff") format("woff"), url("../fonts/rma-icons.ttf") format("truetype"), url("../fonts/rma-icons.svg#rma-icons") format("svg");
}

.ic:before {
  font-family: "rma-icons";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  /* speak: none; only necessary if not using the private unicode range (firstGlyph option) */
  text-decoration: none;
  text-transform: none;
}

.ic-bars:before {
  content: "\E001";
}

.ic-close-box:before {
  content: "\E002";
}

.ic-close:before {
  content: "\E003";
}

* {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-family: Verdana, sans-serif;
}

ul,
ol {
  list-style: none;
}

a {
  -webkit-transition: all .25s;
  transition: all .25s;
}

.sr-only {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

h2,
.h2 {
  font-size: 0.875rem;
  font-weight: bold;
  margin: 1em 0;
}

h2 ~ h2,
h2 ~ .h2,
.h2 ~ h2,
.h2 ~ .h2 {
  margin-top: 3em;
}

h2 small,
.h2 small {
  font-weight: normal;
  font-size: 0.6875rem;
}

p {
  font-size: 0.6875rem;
  margin: 1em 0;
  line-height: 1.4em;
}

.listing-grid img {
  display: block;
  width: 100%;
  height: auto;
  -webkit-transition: all .25s;
  transition: all .25s;
  position: relative;
  z-index: 0;
}

.listing-grid a {
  display: block;
  position: relative;
  color: #FFFFFF;
  text-shadow: 0px 0px 2px #111111;
  background: #C8C9CF;
  overflow: hidden;
}

.listing-grid a:hover img,
.listing-grid a:focus img {
  opacity: .5;
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
}

.listing-grid h2 {
  position: absolute;
  bottom: 0;
  left: 0;
  margin: 0;
  z-index: 1;
  padding: 0.625rem;
}

.cw {
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.cw > header > div {
  max-width: 1240px;
  margin: auto;
  padding: 0 1.25rem;
  position: -webkit-sticky;
  position: sticky;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  z-index: 1000;
}

.cw > header h1 {
  font-size: 0.875rem;
  color: #FF2020;
  font-weight: bold;
}

.cw > header h1 a {
  display: block;
  color: #FF2020;
  text-decoration: none;
  padding: 0.6875rem 0 1.125rem 0;
}

.cw > header .overlay .toggle-trigger {
  height: 2.8125rem;
  width: 3.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: absolute;
  top: 0;
  right: 0;
  color: #FFFFFF;
  font-size: 1.5rem;
}

.cw > header .menu-toggle:checked ~ .overlay {
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.cw .nav-primary ul {
  font-size: 1rem;
  text-transform: uppercase;
  text-align: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.cw .nav-primary a {
  display: block;
  color: #FFFFFF;
  padding: 1.125rem 0.46875rem 1.125rem 1.09375rem;
  text-decoration: none;
}

.cw .nav-primary a:hover,
.cw .nav-primary a:focus {
  color: rgba(255, 255, 255, 0.7);
}

.cw > main {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.cw > main > div {
  max-width: 1240px;
  margin: auto;
  padding: 0 1.25rem;
}

.cw .main-content {
  color: #636569;
}

.cw > footer {
  font-size: 0.75rem;
  color: #202020;
  padding: 1.5rem 0;
}

.cw > footer .company-name {
  font-weight: bold;
}

.cw > footer a {
  color: #202020;
  text-decoration: none;
}

.cw > footer > div {
  max-width: 1240px;
  margin: auto;
  padding: 0 1.25rem;
}

.cw > footer ul {
  margin-bottom: 1em;
}

.cw > footer ul li {
  line-height: 1.4em;
}

.listing-table table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 2.375rem;
}

.listing-table thead {
  border-bottom: 1px solid #202020;
}

.listing-table th {
  text-align: left;
  font-size: 0.75rem;
  text-transform: uppercase;
  font-weight: bold;
  padding: 0.5rem 0;
  position: relative;
  -webkit-transition: all .25s;
  transition: all .25s;
  cursor: pointer;
}

.listing-table th:hover,
.listing-table th:focus {
  color: #FF2020;
  outline: 0;
}

.listing-table th:hover div:after,
.listing-table th:focus div:after {
  opacity: 1;
}

.listing-table th div {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding-right: 1.25rem;
}

.listing-table th div:after {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 4px 6px 4px;
  border-color: transparent transparent #202020 transparent;
  content: "";
  opacity: .5;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.listing-table th[aria-sort="ascending"],
.listing-table th[aria-sort="descending"] {
  color: #FF2020;
}

.listing-table th[aria-sort="ascending"] div:after,
.listing-table th[aria-sort="descending"] div:after {
  opacity: 1;
}

.listing-table th[aria-sort="descending"] div:after {
  -webkit-transform: rotate(0);
          transform: rotate(0);
}

.listing-table td {
  padding: 1em 0;
}

.listing-table td,
.listing-table td h2 {
  font-size: 0.6875rem;
}

.listing-table td h2 {
  margin: 0;
}

.listing-table a {
  color: #202020;
  text-decoration: none;
}

.listing-table a:hover,
.listing-table a:focus {
  color: #FF2020;
  text-decoration: underline;
  outline: none;
}

.project-images img {
  width: 100%;
  height: auto;
  display: block;
}

.project-images figure {
  padding-bottom: 1.5rem;
}

.project-images figcaption {
  font-size: 0.5625rem;
  line-height: 1.22222em;
  margin-top: 1em;
  color: #636569;
}

.project-detail main nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  font-size: 0.75rem;
}

.project-detail main nav a {
  color: #636569;
  text-decoration: none;
}

.project-detail main nav a:hover,
.project-detail main nav a:focus {
  color: #FF2020;
  text-decoration: underline;
}

.project-archive main nav {
  font-size: 0.875rem;
}

.project-archive main nav li {
  margin-bottom: .2em;
}

.project-archive main nav li:last-child {
  margin-top: 2em;
}

.project-archive main nav a {
  color: #636569;
}

.project-archive main nav a:hover,
.project-archive main nav a:focus {
  color: #FF2020;
}

.project-archive main nav a.active {
  color: #FF2020;
  font-weight: bold;
}

.contact-info {
  font-size: 0.75rem;
  margin-bottom: 2em;
}

.contact-info a {
  color: #636569;
}

.contact-info a:hover,
.contact-info a:focus {
  color: #FF2020;
}

.contact-info li.address {
  margin-bottom: 1em;
}

.contact iframe {
  width: 100%;
}

.hp-grid > div,
.interior-grid > div {
  margin-bottom: 0.625rem;
}

.hp-grid > .dw,
.interior-grid > .dw {
  grid-column-end: span 2;
}

.hp-grid > .dt,
.interior-grid > .dt {
  grid-row-end: span 2;
}

.hp-grid img,
.interior-grid img {
  width: 100%;
  height: 100%;
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
  position: relative;
  z-index: 0;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.hp-grid .hp-blurb,
.interior-grid .hp-blurb {
  background: #C8C9CF;
  color: #FFFFFF;
  font-size: 1rem;
  padding: 0.625rem;
}

.menu-link {
  position: relative;
  background: #C8C9CF;
  overflow: hidden;
}

.menu-link > div {
  position: absolute;
  z-index: 10;
  font-size: 1.125rem;
  color: #FFFFFF;
  text-transform: uppercase;
  font-weight: bold;
  text-shadow: 0px 0px 2px #111111;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.menu-link:hover img,
.menu-link:focus img {
  opacity: .5;
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
}

.dialog {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  overflow: auto;
  z-index: 9999;
  display: none;
}

.dialog-open .dialog {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.dialog .dialog-inner {
  width: 100%;
  margin: auto;
  max-width: 512px;
  background: #FFFFFF;
  padding: 1.25rem;
  border: 0.0625rem solid #202020;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

.cw .dialog .main-content > div:first-child {
  width: 50%;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
}

.cw .dialog .main-content > div:last-child {
  width: 50%;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
}

.dialog img {
  display: block;
  width: 100%;
  height: auto;
}

.dialog button {
  width: 1.5rem;
  height: 1.5rem;
  color: #202020;
  cursor: pointer;
  margin-bottom: 0.3125rem;
  padding: 0;
  font-size: 0.625rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
}

.header_widget {
  margin: 1.25rem;
}

.header_widget input[type="text"] {
  font-size: 0.875rem;
  border: 0.0625rem solid #111111;
  padding: 0.3125rem;
  width: 100%;
}

.search-results h2 {
  margin-bottom: 3em;
}

.search-results article {
  margin-bottom: 2em;
  padding: 0 1em 1em;
  border-bottom: 1px solid #202020;
}

.search-results article:last-child {
  border-bottom: 0;
}

.search-results article h3 {
  font-size: 0.875rem;
}

.search-results a {
  color: #202020;
}

.search-results a:hover,
.search-results a:focus {
  color: #FF2020;
}

.search-results .type {
  font-size: 0.625rem;
  color: #636569;
}

@media screen and (min-width: 768px) {
  .listing-grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    margin: -1.25rem / 2;
  }

  .listing-grid article {
    width: 50%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    padding: 0.625rem;
  }

  .cw > header .overlay {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }

  .cw > header .overlay .toggle-trigger {
    display: none;
  }

  .cw .nav-primary {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
  }

  .cw .nav-primary ul {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    margin-right: -0.46875rem;
    font-size: 0.75rem;
    font-weight: bold;
  }

  .cw .nav-primary a {
    color: #636569;
    padding: 0.6875rem 0.46875rem 1.125rem 1.09375rem;
  }

  .cw .nav-primary a:hover,
  .cw .nav-primary a:focus {
    color: #FF2020;
  }

  .cw .nav-primary .current-menu-item a {
    color: #FF2020;
  }

  .cw .toggle-trigger {
    display: none;
  }

  .cw .main-content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .cw .main-content > div:first-child {
    width: 25%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    padding-right: 0.625rem;
  }

  .cw .main-content > div:last-child {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    padding-left: 0.625rem;
  }

  .cw > footer {
    font-size: 0.625rem;
  }

  .cw > footer ul {
    margin: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .cw > footer ul li + li:before {
    display: inline-block;
    content: "|";
    padding: 0 0.5rem;
  }

  .project-images {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    margin: -0.625rem;
  }

  .project-images figure {
    width: 50%;
    padding: 0.625rem;
  }

  .project-images figure:first-child {
    width: 100%;
  }

  .project-detail main nav :first-child {
    -webkit-transform: translateX(-14px);
            transform: translateX(-14px);
  }

  .project-detail main nav :last-child {
    -webkit-transform: translateX(14px);
            transform: translateX(14px);
  }

  .hp-grid,
  .interior-grid {
    display: grid;
    grid-auto-rows: 1fr;
    grid-auto-flow: dense;
    grid-gap: 10px;
  }

  .hp-grid > div,
  .interior-grid > div {
    margin: 0;
  }

  .menu-link > div {
    font-size: 1.75rem;
  }

  .menu-link.tl > div {
    top: 0.3125rem;
    left: 0.3125rem;
    -webkit-transform-origin: left center;
            transform-origin: left center;
  }

  .menu-link.bl > div {
    bottom: 0.3125rem;
    left: 0.3125rem;
    -webkit-transform-origin: left center;
            transform-origin: left center;
  }

  .menu-link.tr > div {
    top: 0.3125rem;
    right: 0.3125rem;
    -webkit-transform-origin: right center;
            transform-origin: right center;
  }

  .menu-link.br > div {
    bottom: 0.3125rem;
    right: 0.3125rem;
    -webkit-transform-origin: right center;
            transform-origin: right center;
  }

  .hp-grid {
    grid-template-columns: 1fr 1fr 1fr;
  }

  .interior-grid {
    grid-template-columns: 1fr 1fr;
  }

  .header_widget {
    padding: 0.6875rem 0 1.125rem 1.09375rem;
    margin: 0;
  }

  .header_widget input[type="text"] {
    font-size: 0.6875rem;
    width: auto;
    padding: 0.125rem 0.3125rem;
  }
}

@media screen and (min-width: 1025px) {
  .listing-grid article {
    width: 33.3%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.3%;
            flex: 0 0 33.3%;
  }

  .cw > footer > div > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }

  .project-detail .main-content > div:last-child {
    width: 50%;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
  }

  .hp-grid .hp-blurb,
  .interior-grid .hp-blurb {
    font-size: 1.25rem;
  }

  .hp-grid {
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }

  .interior-grid {
    grid-template-columns: 1fr 1fr 1fr;
  }

  .search-results {
    width: 80%;
    margin: auto;
  }
}

@media screen and (max-width: 767.9px) {
  .cw > header .overlay {
    position: fixed;
    width: 100%;
    height: 100vh;
    z-index: 9000;
    top: 0;
    left: 0;
    background: rgba(32, 32, 32, 0.95);
    -webkit-transform: translateX(100%);
            transform: translateX(100%);
    -webkit-transition: all .25s;
    transition: all .25s;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }

  .cw .nav-primary > div,
  .cw .nav-primary ul {
    height: 100%;
  }
}
/*# sourceMappingURL=data:application/json;base64, */