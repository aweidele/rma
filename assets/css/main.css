/* Initialize */

@font-face {
  font-family: "rma-icons";
  src: url("../fonts/rma-icons.eot");
  src: url("../fonts/rma-icons.eot?#iefix") format("eot"), url("../fonts/rma-icons.woff2") format("woff2"), url("../fonts/rma-icons.woff") format("woff"), url("../fonts/rma-icons.ttf") format("truetype"), url("../fonts/rma-icons.svg#rma-icons") format("svg");
}

.ic:before {
  font-family: "rma-icons";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  /* speak: none; only necessary if not using the private unicode range (firstGlyph option) */
  text-decoration: none;
  text-transform: none;
}

.ic-bars:before {
  content: "\E001";
}

.ic-close:before {
  content: "\E002";
}

* {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-family: Verdana, sans-serif;
}

ul,
ol {
  list-style: none;
}

a {
  -webkit-transition: all .25s;
  transition: all .25s;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

h2,
.h2 {
  font-size: 0.875rem;
  font-weight: bold;
  margin: 1em 0;
}

h2 ~ h2,
h2 ~ .h2,
.h2 ~ h2,
.h2 ~ .h2 {
  margin-top: 3em;
}

h2 small,
.h2 small {
  font-weight: normal;
  font-size: 0.6875rem;
}

p {
  font-size: 0.6875rem;
  margin: 1em 0;
  line-height: 1.4em;
}

.listing-grid img {
  display: block;
  width: 100%;
  height: auto;
  -webkit-transition: all .25s;
  transition: all .25s;
  position: relative;
  z-index: 0;
}

.listing-grid a {
  display: block;
  position: relative;
  color: #FFFFFF;
  text-shadow: 0px 0px 2px #111111;
  background: #C8C9CF;
}

.listing-grid a:hover img,
.listing-grid a:focus img {
  opacity: .5;
}

.listing-grid h2 {
  position: absolute;
  bottom: 0;
  left: 0;
  margin: 0;
  z-index: 1;
  padding: 10px;
}

.cw {
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.cw > header > div {
  max-width: 1240px;
  margin: auto;
  padding: 0 20px;
  position: -webkit-sticky;
  position: sticky;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  z-index: 1000;
}

.cw > header h1 {
  font-size: 0.8125rem;
  color: #FF2020;
  font-weight: bold;
}

.cw > header h1 a {
  display: block;
  color: #FF2020;
  text-decoration: none;
  padding: 11px 0 18px 0;
}

.cw > header h1 a:hover,
.cw > header h1 a:focus {
  color: #636569;
}

.cw > header .overlay .toggle-trigger {
  height: 45px;
  width: 52px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: absolute;
  top: 0px;
  right: 0px;
  color: #FFFFFF;
  font-size: 1.5rem;
}

.cw > header .menu-toggle:checked ~ .overlay {
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.cw .nav-primary {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.cw .nav-primary ul {
  font-size: 1rem;
  text-transform: uppercase;
  text-align: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.cw .nav-primary a {
  display: block;
  color: #FFFFFF;
  padding: 18px 7.5px 18px 17.5px;
  text-decoration: none;
}

.cw .nav-primary a:hover,
.cw .nav-primary a:focus {
  color: rgba(255, 255, 255, 0.7);
}

.cw > main {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.cw > main > div {
  max-width: 1240px;
  margin: auto;
  padding: 0 20px;
}

.cw .main-content {
  color: #636569;
}

.cw > footer {
  font-size: 0.75rem;
  color: #202020;
  padding: 24px 0;
}

.cw > footer .company-name {
  font-weight: bold;
}

.cw > footer a {
  color: #202020;
  text-decoration: none;
}

.cw > footer a:hover,
.cw > footer a:focus {
  color: #FF2020;
}

.cw > footer > div {
  max-width: 1240px;
  margin: auto;
  padding: 0 20px;
}

.cw > footer ul {
  margin-bottom: 1em;
}

.cw > footer ul li {
  line-height: 1.4em;
}

.listing-table table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 38px;
}

.listing-table thead {
  border-bottom: 1px solid #202020;
}

.listing-table th {
  text-align: left;
  font-size: 0.75rem;
  text-transform: uppercase;
  font-weight: bold;
  padding: 8px 0;
  position: relative;
  -webkit-transition: all .25s;
  transition: all .25s;
  cursor: pointer;
}

.listing-table th:hover,
.listing-table th:focus {
  color: #FF2020;
  outline: 0;
}

.listing-table th:hover div:after,
.listing-table th:focus div:after {
  opacity: 1;
}

.listing-table th div {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding-right: 20px;
}

.listing-table th div:after {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 4px 6px 4px;
  border-color: transparent transparent #202020 transparent;
  content: "";
  opacity: .5;
  -webkit-transition: all .25s;
  transition: all .25s;
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.listing-table th[aria-sort="ascending"],
.listing-table th[aria-sort="descending"] {
  color: #FF2020;
}

.listing-table th[aria-sort="ascending"] div:after,
.listing-table th[aria-sort="descending"] div:after {
  opacity: 1;
}

.listing-table th[aria-sort="descending"] div:after {
  -webkit-transform: rotate(0);
          transform: rotate(0);
}

.listing-table td {
  padding: 1em 0;
}

.listing-table td,
.listing-table td h2 {
  font-size: 0.6875rem;
}

.listing-table td h2 {
  margin: 0;
}

.listing-table a {
  color: #202020;
  text-decoration: none;
}

.listing-table a:hover,
.listing-table a:focus {
  color: #FF2020;
  text-decoration: underline;
  outline: none;
}

.project-images img {
  width: 100%;
  height: auto;
  display: block;
}

.project-images figure {
  padding-bottom: 24px;
}

.project-images figcaption {
  font-size: 0.5625rem;
  line-height: 1.22222em;
  margin-top: 1em;
  color: #636569;
}

.project-detail main nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  font-size: 0.75rem;
}

.project-detail main nav a {
  color: #636569;
  text-decoration: none;
}

.project-detail main nav a:hover,
.project-detail main nav a:focus {
  color: #FF2020;
  text-decoration: underline;
}

.project-archive main nav {
  font-size: 0.875rem;
}

.project-archive main nav li {
  margin-bottom: .2em;
}

.project-archive main nav li:last-child {
  margin-top: 2em;
}

.project-archive main nav a {
  color: #636569;
}

.project-archive main nav a:hover,
.project-archive main nav a:focus {
  color: #FF2020;
}

.project-archive main nav a.active {
  color: #FF2020;
  font-weight: bold;
}

.contact-info {
  font-size: 0.75rem;
  margin-bottom: 2em;
}

.contact-info a {
  color: #636569;
}

.contact-info a:hover,
.contact-info a:focus {
  color: #FF2020;
}

.contact-info li.address {
  margin-bottom: 1em;
}

.contact iframe {
  width: 100%;
}

.hp-grid > div {
  margin-bottom: 10px;
}

.hp-grid > .dw {
  grid-column-end: span 2;
}

.hp-grid > .dt {
  grid-row-end: span 2;
}

.hp-grid img {
  width: 100%;
  height: 100%;
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
  position: relative;
  z-index: 0;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.hp-grid .hp-blurb {
  background: #C8C9CF;
  color: #FFFFFF;
  font-size: 1rem;
  padding: 10px;
}

.menu-link {
  position: relative;
  background: #202020;
}

.menu-link > div {
  position: absolute;
  z-index: 10;
  font-size: 1.125rem;
  color: #FFFFFF;
  text-transform: uppercase;
  font-weight: bold;
  text-shadow: 0px 0px 2px #111111;
  -webkit-transition: all .25s;
  transition: all .25s;
}

.menu-link:hover img,
.menu-link:focus img {
  opacity: .5;
}

.dialog {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  overflow: auto;
  z-index: 9999;
  display: none;
}

.dialog-open .dialog {
  display: block;
}

@media screen and (min-width: 768px) {
  .listing-grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    margin: -20px / 2;
  }

  .listing-grid article {
    width: 50%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    padding: 10px;
  }

  .cw > header .overlay {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }

  .cw > header .overlay .toggle-trigger {
    display: none;
  }

  .cw .nav-primary ul {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    margin-right: -7.5px;
    font-size: 0.75rem;
    font-weight: bold;
  }

  .cw .nav-primary a {
    color: #636569;
    padding: 11px 7.5px 18px 17.5px;
  }

  .cw .nav-primary a:hover,
  .cw .nav-primary a:focus {
    color: #FF2020;
  }

  .cw .toggle-trigger {
    display: none;
  }

  .cw .main-content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .cw .main-content > div:first-child {
    width: 25%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    padding-right: 10px;
  }

  .cw .main-content > div:last-child {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    padding-left: 10px;
  }

  .cw > footer {
    font-size: 0.625rem;
  }

  .cw > footer ul {
    margin: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  .cw > footer ul li + li:before {
    display: inline-block;
    content: "|";
    padding: 0 8px;
  }

  .project-images {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    margin: -10px;
  }

  .project-images figure {
    width: 50%;
    padding: 10px;
  }

  .project-images figure:first-child {
    width: 100%;
  }

  .project-detail main nav :first-child {
    -webkit-transform: translateX(-14px);
            transform: translateX(-14px);
  }

  .project-detail main nav :last-child {
    -webkit-transform: translateX(14px);
            transform: translateX(14px);
  }

  .hp-grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-auto-rows: 1fr;
    grid-auto-flow: dense;
    grid-gap: 10px;
  }

  .hp-grid > div {
    margin: 0;
  }

  .menu-link > div {
    font-size: 1.75rem;
  }

  .menu-link.tl > div {
    top: 5px;
    left: 5px;
    -webkit-transform-origin: left center;
            transform-origin: left center;
  }

  .menu-link.bl > div {
    bottom: 5px;
    left: 5px;
    -webkit-transform-origin: left center;
            transform-origin: left center;
  }

  .menu-link.tr > div {
    top: 5px;
    right: 5px;
    -webkit-transform-origin: right center;
            transform-origin: right center;
  }

  .menu-link.br > div {
    bottom: 5px;
    right: 5px;
    -webkit-transform-origin: right center;
            transform-origin: right center;
  }
}

@media screen and (min-width: 1025px) {
  .listing-grid article {
    width: 33.3%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.3%;
            flex: 0 0 33.3%;
  }

  .cw > footer > div > div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }

  .project-detail .main-content > div:last-child {
    width: 50%;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
  }

  .hp-grid {
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }

  .hp-grid .hp-blurb {
    font-size: 1.25rem;
  }
}

@media screen and (max-width: 767.9px) {
  .cw > header .overlay {
    position: fixed;
    width: 100%;
    height: 100vh;
    z-index: 9000;
    top: 0;
    left: 0;
    background: rgba(32, 32, 32, 0.95);
    -webkit-transform: translateX(100%);
            transform: translateX(100%);
    -webkit-transition: all .25s;
    transition: all .25s;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .cw .nav-primary > div,
  .cw .nav-primary ul {
    height: 100%;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4uY3NzIiwiYmFzZS9faWNvbnMuc2NzcyIsImJhc2UvX3Jlc2V0LnNjc3MiLCJjb21wb25lbnRzL19jb3B5LnNjc3MiLCJzdHJ1Y3R1cmUvX2xpc3RpbmctZ3JpZC5zY3NzIiwiYmFzZS9fdmFyaWFibGVzLnNjc3MiLCJiYXNlL19taXhpbnMuc2NzcyIsInN0cnVjdHVyZS9fcGFnZS5zY3NzIiwic3RydWN0dXJlL19oZWFkZXIuc2NzcyIsInN0cnVjdHVyZS9fbWFpbi5zY3NzIiwic3RydWN0dXJlL19mb290ZXIuc2NzcyIsInN0cnVjdHVyZS9fcHJvamVjdHMuc2NzcyIsInN0cnVjdHVyZS9fY29udGFjdC5zY3NzIiwiY29tcG9uZW50cy9faHAtZ3JpZC5zY3NzIiwiY29tcG9uZW50cy9fZGlhbG9nLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCOztBQ0VoQjtFQ0FDLHlCQUFLO0VBQ0wsbUNBQUs7RURFSixpUUFBaVE7Q0FDbFE7O0FBRUQ7RUNJRSx5QkFBd0I7RUFDeEIsb0NBQWtDO0VBQ25DLG1DQUFrQjtFQUNsQixtQkFBYztFQUNkLHFCQUFtQjtFQUNuQixvQkFBQTtFQUNBLDRGQUFxQjtFQUNyQixzQkFBb0I7RUFDcEIscUJBQUE7Q0RGQTs7QUFFRDtFQ0tDLGlCQUFBO0NESEE7O0FBRUQ7RUNLQyxpQkFBQTtDREhBOztBQUVEO0VFMUJFLFVBQVU7RUFDVixXQUFTO0VBQ1QsVUFBVTtFQUNWLCtCQUFhO1VBQ2QsdUJBQUE7RUY0QkMsaUNBQWlDO0NFMUJuQzs7QUY2QkE7O0VBRUUsaUJBQWlCO0NFMUJsQjs7QUY2QkQ7RUFDRSw2QkFBNkI7RUUxQi9CLHFCQUFTO0NGNEJSOztBQUVEO0VFMUJFLG1CQUFVO0VBQ1YsV0FBUTtFQUNSLFlBQVU7RUFDVixXQUFNO0VBQ04sYUFBUztFQUNWLGlCQUFBO0VGNEJDLHVCQUF1QjtFR2xEdkIsVUFBTTtDSG9EUDs7QUFFRDs7RUFFRSxvQkFBZ0I7RUd4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Q0ltQmxCOztBQWZDO0VGWEYsaUJFUWE7RVRtUlgsbUJTL1FlO0VUZ1JmLDBCU2xRRDtFRjFCRCxrQkVRYTtFVHNSWCxlUzlRZ0I7RVQrUWhCLG1CUzlRbUI7RVQrUW5CLDZCUzlRZ0M7RVQrUWhDLHFCUzlRSztFRm5CUCxnQkVRQTtDVDJSQzs7QUFFRDs7RUFFRSxlQUFlO0VPdlNqQixXR0FXO0NWeVNWOztBQUVEOztFQUVFLFdBQVc7Q1V4U1g7O0FWMlNGO0VBQ0UscUJVOVBEO0VWK1BDLHFCQUFxQjtFQUNyQixjQUFjO0VPblRoQiwwQkdTZ0I7TUFDWix1QkFBaUI7VUFDbEIsK0JBQUE7RVY0U0QsMEJBQTBCO01VdlR4Qix1QkFhQTtVTFBNLG9CQUFPO0VLU2Isb0JBQWlCO0NBS2xCOztBSmJEO0VJV0ksU0xWRztFQ0VOLFVBQUE7RU5zVEQsb0JBQW9CO0VPaFV0Qiw0QkdzQlE7RUpyQk4sMERERFU7RUNFVixZQUFZO0VBQ1osWURGTztFSytCTiw2QkFBQTtFVnNTRCxxQkFBcUI7RVU1U2pCLGtDQUFvQztVQTFCdEMsMEJBeUJNO0NWZ1RUOztBQUVEOztFQUVFLGVBQWU7Q0FDaEI7O0FBRUQ7O0VBRUUsV0FBVztDT2xWYjs7QVBxVkE7RUFDRSw2QkFBNkI7VVUvU3BCLHFCQUF1QjtDVmlUakM7O0FBRUQ7RUFDRSxlVXpTQztDVjBTRjs7QUFFRDs7RUFFRSxxQlVqVFM7Q1ZrVFY7O0FXN1ZEO0VBRUksVUFBTztDWCtWVjs7QUFFRDtFQUNFLGVBQWU7RVdwV2pCLHNCQU9RO0NYK1ZQOztBQUVEOztFVzVWSSxlQUFZO0VBQ1osMkJBQWU7RUFDZixjQUFjO0NYK1ZqQjs7QUFFRDtFVzdWSSxZQUFZO0VBQ1osYUFBUTtFQTJDVCxlQUFBO0NYcVRGOztBQUVEO0VXOVZNLHFCQUFVO0NMakJiOztBS05IO0VBMEJRLHFCQUFVO0VBQ1gsdUJBQUE7RVhpV0wsZ0JBQWdCO0VXNVhsQixlQVdJO0NYbVhIOztBQUVEO0VXOVZNLHFCTnJDTztFTWtEUixxQkFBQTtFWG9WSCxjQUFjO0VXblloQiwwQkFvQ2M7TUFD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N0I7O0VBRUQ7SUFDRSxXQUFXO0lBQ1gsb0JBQW9CO1FBQ2hCLHFCQUFxQjtZQUNqQixhQUFhO0dBQ3RCOztFQUVEO0lBQ0UsdUNBQXVDO0dBQ3hDOztFQUVEO0lBQ0UsbUJBQWdCO0dBQ2pCO0NBQ0Y7O0FBRUQ7RUFDRTtJQUNFLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osY0FBYztJQUNkLGNBQWM7SUFDZCxPQUFPO0lBQ1AsUUFBUTtJQUNSLG1DQUFtQztJQUNuQyxvQ0FBb0M7WUFDNUIsNEJBQTRCO0lBQ3BDLDZCQUE2QjtJQUM3QixxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsNkJBQTZCO0lBQzdCLDhCQUE4QjtRQUMxQiwyQkFBMkI7WUFDdkIsdUJBQXVCO0dBQ2hDOztFQUVEOztJQUVFLGFBQWE7R0FDZDtDQUNGIiwiZmlsZSI6InRvLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEluaXRpYWxpemUgKi9cbkBpbXBvcnQgJ2Jhc2UvaWNvbnMnO1xuQGltcG9ydCAnYmFzZS9yZXNldCc7XG5AaW1wb3J0ICdiYXNlL3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICdiYXNlL21peGlucyc7XG5cbkBpbXBvcnQgJ2NvbXBvbmVudHMvY29weSc7XG5cbkBpbXBvcnQgJ3N0cnVjdHVyZS9saXN0aW5nLWdyaWQnO1xuQGltcG9ydCAnc3RydWN0dXJlL3BhZ2UnO1xuQGltcG9ydCAnc3RydWN0dXJlL3Byb2plY3RzJztcbkBpbXBvcnQgJ3N0cnVjdHVyZS9jb250YWN0JztcblxuQGltcG9ydCAnY29tcG9uZW50cy9ocC1ncmlkJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvc3RhZmYtbGlzdCc7XG5AaW1wb3J0ICdjb21wb25lbnRzL2RpYWxvZyc7XG4iLCIvKiBJbml0aWFsaXplICovXG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJybWEtaWNvbnNcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9ybWEtaWNvbnMuZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3JtYS1pY29ucy5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVvdFwiKSwgdXJsKFwiLi4vZm9udHMvcm1hLWljb25zLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9ybWEtaWNvbnMud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9ybWEtaWNvbnMudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9ybWEtaWNvbnMuc3ZnI3JtYS1pY29uc1wiKSBmb3JtYXQoXCJzdmdcIik7XG59XG5cbi5pYzpiZWZvcmUge1xuICBmb250LWZhbWlseTogXCJybWEtaWNvbnNcIjtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIC8qIHNwZWFrOiBub25lOyBvbmx5IG5lY2Vzc2FyeSBpZiBub3QgdXNpbmcgdGhlIHByaXZhdGUgdW5pY29kZSByYW5nZSAoZmlyc3RHbHlwaCBvcHRpb24pICovXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi5pYy1iYXJzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxFMDAxXCI7XG59XG5cbi5pYy1jbG9zZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcRTAwMlwiO1xufVxuXG4qIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LWZhbWlseTogVmVyZGFuYSwgc2Fucy1zZXJpZjtcbn1cblxudWwsXG5vbCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmEge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbn1cblxuLnNyLW9ubHkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbn1cblxuaDIsXG4uaDIge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDFlbSAwO1xufVxuXG5oMiB+IGgyLFxuaDIgfiAuaDIsXG4uaDIgfiBoMixcbi5oMiB+IC5oMiB7XG4gIG1hcmdpbi10b3A6IDNlbTtcbn1cblxuaDIgc21hbGwsXG4uaDIgc21hbGwge1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDExcHg7XG59XG5cbnAge1xuICBmb250LXNpemU6IDExcHg7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjRlbTtcbn1cblxuLmxpc3RpbmctZ3JpZCBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMDtcbn1cblxuLmxpc3RpbmctZ3JpZCBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIHRleHQtc2hhZG93OiAwcHggMHB4IDJweCAjMTExMTExO1xuICBiYWNrZ3JvdW5kOiAjQzhDOUNGO1xufVxuXG4ubGlzdGluZy1ncmlkIGE6aG92ZXIgaW1nLFxuLmxpc3RpbmctZ3JpZCBhOmZvY3VzIGltZyB7XG4gIG9wYWNpdHk6IC41O1xufVxuXG4ubGlzdGluZy1ncmlkIGgyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbjogMDtcbiAgei1pbmRleDogMTtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLmN3IHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uY3cgPiBoZWFkZXIgPiBkaXYge1xuICBtYXgtd2lkdGg6IDEyNDBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAwIDIwcHg7XG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHotaW5kZXg6IDEwMDA7XG59XG5cbi5jdyA+IGhlYWRlciBoMSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgY29sb3I6ICNGRjIwMjA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uY3cgPiBoZWFkZXIgaDEgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogI0ZGMjAyMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBwYWRkaW5nOiAxMXB4IDAgMThweCAwO1xufVxuXG4uY3cgPiBoZWFkZXIgaDEgYTpob3Zlcixcbi5jdyA+IGhlYWRlciBoMSBhOmZvY3VzIHtcbiAgY29sb3I6ICM2MzY1Njk7XG59XG5cbi5jdyA+IGhlYWRlciAub3ZlcmxheSAudG9nZ2xlLXRyaWdnZXIge1xuICBoZWlnaHQ6IDQ1cHg7XG4gIHdpZHRoOiA1MnB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuLmN3ID4gaGVhZGVyIC5tZW51LXRvZ2dsZTpjaGVja2VkIH4gLm92ZXJsYXkge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG59XG5cbi5jdyAubmF2LXByaW1hcnkge1xuICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAgICAgLW1zLWZsZXgtcG9zaXRpdmU6IDE7XG4gICAgICAgICAgZmxleC1ncm93OiAxO1xufVxuXG4uY3cgLm5hdi1wcmltYXJ5IHVsIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5jdyAubmF2LXByaW1hcnkgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgcGFkZGluZzogMThweCA3LjVweCAxOHB4IDE3LjVweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uY3cgLm5hdi1wcmltYXJ5IGE6aG92ZXIsXG4uY3cgLm5hdi1wcmltYXJ5IGE6Zm9jdXMge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpO1xufVxuXG4uY3cgPiBtYWluIHtcbiAgLXdlYmtpdC1ib3gtZmxleDogMTtcbiAgICAgIC1tcy1mbGV4LXBvc2l0aXZlOiAxO1xuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbn1cblxuLmN3ID4gbWFpbiA+IGRpdiB7XG4gIG1heC13aWR0aDogMTI0MHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuLmN3IC5tYWluLWNvbnRlbnQge1xuICBjb2xvcjogIzYzNjU2OTtcbn1cblxuLmN3ID4gZm9vdGVyIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogIzIwMjAyMDtcbiAgcGFkZGluZzogMjRweCAwO1xufVxuXG4uY3cgPiBmb290ZXIgLmNvbXBhbnktbmFtZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uY3cgPiBmb290ZXIgYSB7XG4gIGNvbG9yOiAjMjAyMDIwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5jdyA+IGZvb3RlciBhOmhvdmVyLFxuLmN3ID4gZm9vdGVyIGE6Zm9jdXMge1xuICBjb2xvcjogI0ZGMjAyMDtcbn1cblxuLmN3ID4gZm9vdGVyID4gZGl2IHtcbiAgbWF4LXdpZHRoOiAxMjQwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG4uY3cgPiBmb290ZXIgdWwge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5jdyA+IGZvb3RlciB1bCBsaSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjRlbTtcbn1cblxuLmxpc3RpbmctdGFibGUgdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgbWFyZ2luLXRvcDogMzhweDtcbn1cblxuLmxpc3RpbmctdGFibGUgdGhlYWQge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzIwMjAyMDtcbn1cblxuLmxpc3RpbmctdGFibGUgdGgge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDEycHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBwYWRkaW5nOiA4cHggMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ubGlzdGluZy10YWJsZSB0aDpob3Zlcixcbi5saXN0aW5nLXRhYmxlIHRoOmZvY3VzIHtcbiAgY29sb3I6ICNGRjIwMjA7XG4gIG91dGxpbmU6IDA7XG59XG5cbi5saXN0aW5nLXRhYmxlIHRoOmhvdmVyIGRpdjphZnRlcixcbi5saXN0aW5nLXRhYmxlIHRoOmZvY3VzIGRpdjphZnRlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5saXN0aW5nLXRhYmxlIHRoIGRpdiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuXG4ubGlzdGluZy10YWJsZSB0aCBkaXY6YWZ0ZXIge1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDAgNHB4IDZweCA0cHg7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzIwMjAyMCB0cmFuc3BhcmVudDtcbiAgY29udGVudDogXCJcIjtcbiAgb3BhY2l0eTogLjU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cblxuLmxpc3RpbmctdGFibGUgdGhbYXJpYS1zb3J0PVwiYXNjZW5kaW5nXCJdLFxuLmxpc3RpbmctdGFibGUgdGhbYXJpYS1zb3J0PVwiZGVzY2VuZGluZ1wiXSB7XG4gIGNvbG9yOiAjRkYyMDIwO1xufVxuXG4ubGlzdGluZy10YWJsZSB0aFthcmlhLXNvcnQ9XCJhc2NlbmRpbmdcIl0gZGl2OmFmdGVyLFxuLmxpc3RpbmctdGFibGUgdGhbYXJpYS1zb3J0PVwiZGVzY2VuZGluZ1wiXSBkaXY6YWZ0ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ubGlzdGluZy10YWJsZSB0aFthcmlhLXNvcnQ9XCJkZXNjZW5kaW5nXCJdIGRpdjphZnRlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG59XG5cbi5saXN0aW5nLXRhYmxlIHRkIHtcbiAgcGFkZGluZzogMWVtIDA7XG59XG5cbi5saXN0aW5nLXRhYmxlIHRkLFxuLmxpc3RpbmctdGFibGUgdGQgaDIge1xuICBmb250LXNpemU6IDExcHg7XG59XG5cbi5saXN0aW5nLXRhYmxlIHRkIGgyIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4ubGlzdGluZy10YWJsZSBhIHtcbiAgY29sb3I6ICMyMDIwMjA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmxpc3RpbmctdGFibGUgYTpob3Zlcixcbi5saXN0aW5nLXRhYmxlIGE6Zm9jdXMge1xuICBjb2xvcjogI0ZGMjAyMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5wcm9qZWN0LWltYWdlcyBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnByb2plY3QtaW1hZ2VzIGZpZ3VyZSB7XG4gIHBhZGRpbmctYm90dG9tOiAyNHB4O1xufVxuXG4ucHJvamVjdC1pbWFnZXMgZmlnY2FwdGlvbiB7XG4gIGZvbnQtc2l6ZTogOXB4O1xuICBsaW5lLWhlaWdodDogMS4yMjIyMmVtO1xuICBtYXJnaW4tdG9wOiAxZW07XG4gIGNvbG9yOiAjNjM2NTY5O1xufVxuXG4ucHJvamVjdC1kZXRhaWwgbWFpbiBuYXYge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4ucHJvamVjdC1kZXRhaWwgbWFpbiBuYXYgYSB7XG4gIGNvbG9yOiAjNjM2NTY5O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5wcm9qZWN0LWRldGFpbCBtYWluIG5hdiBhOmhvdmVyLFxuLnByb2plY3QtZGV0YWlsIG1haW4gbmF2IGE6Zm9jdXMge1xuICBjb2xvcjogI0ZGMjAyMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5wcm9qZWN0LWFyY2hpdmUgbWFpbiBuYXYge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5wcm9qZWN0LWFyY2hpdmUgbWFpbiBuYXYgbGkge1xuICBtYXJnaW4tYm90dG9tOiAuMmVtO1xufVxuXG4ucHJvamVjdC1hcmNoaXZlIG1haW4gbmF2IGxpOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAyZW07XG59XG5cbi5wcm9qZWN0LWFyY2hpdmUgbWFpbiBuYXYgYSB7XG4gIGNvbG9yOiAjNjM2NTY5O1xufVxuXG4ucHJvamVjdC1hcmNoaXZlIG1haW4gbmF2IGE6aG92ZXIsXG4ucHJvamVjdC1hcmNoaXZlIG1haW4gbmF2IGE6Zm9jdXMge1xuICBjb2xvcjogI0ZGMjAyMDtcbn1cblxuLnByb2plY3QtYXJjaGl2ZSBtYWluIG5hdiBhLmFjdGl2ZSB7XG4gIGNvbG9yOiAjRkYyMDIwO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmNvbnRhY3QtaW5mbyB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4uY29udGFjdC1pbmZvIGEge1xuICBjb2xvcjogIzYzNjU2OTtcbn1cblxuLmNvbnRhY3QtaW5mbyBhOmhvdmVyLFxuLmNvbnRhY3QtaW5mbyBhOmZvY3VzIHtcbiAgY29sb3I6ICNGRjIwMjA7XG59XG5cbi5jb250YWN0LWluZm8gbGkuYWRkcmVzcyB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmNvbnRhY3QgaWZyYW1lIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5ocC1ncmlkID4gZGl2IHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmhwLWdyaWQgPiAuZHcge1xuICBncmlkLWNvbHVtbi1lbmQ6IHNwYW4gMjtcbn1cblxuLmhwLWdyaWQgPiAuZHQge1xuICBncmlkLXJvdy1lbmQ6IHNwYW4gMjtcbn1cblxuLmhwLWdyaWQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMjVzO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbn1cblxuLmhwLWdyaWQgLmhwLWJsdXJiIHtcbiAgYmFja2dyb3VuZDogI0M4QzlDRjtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLm1lbnUtbGluayB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogIzIwMjAyMDtcbn1cblxuLm1lbnUtbGluayA+IGRpdiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTA7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LXNoYWRvdzogMHB4IDBweCAycHggIzExMTExMTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5tZW51LWxpbms6aG92ZXIgaW1nLFxuLm1lbnUtbGluazpmb2N1cyBpbWcge1xuICBvcGFjaXR5OiAuNTtcbn1cblxuLmRpYWxvZyB7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBvdmVyZmxvdzogYXV0bztcbiAgei1pbmRleDogOTk5OTtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmRpYWxvZy1vcGVuIC5kaWFsb2cge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWJXRnBiaTVqYzNNaUxDSnpiM1Z5WTJWeklqcGJJbTFoYVc0dWMyTnpjeUlzSW1KaGMyVXZYMmxqYjI1ekxuTmpjM01pTENKaVlYTmxMMTl5WlhObGRDNXpZM056SWl3aVltRnpaUzlmZG1GeWFXRmliR1Z6TG5OamMzTWlMQ0ppWVhObEwxOXRhWGhwYm5NdWMyTnpjeUlzSW1OdmJYQnZibVZ1ZEhNdlgyTnZjSGt1YzJOemN5SXNJbk4wY25WamRIVnlaUzlmYkdsemRHbHVaeTFuY21sa0xuTmpjM01pTENKemRISjFZM1IxY21VdlgzQmhaMlV1YzJOemN5SXNJbk4wY25WamRIVnlaUzlmYUdWaFpHVnlMbk5qYzNNaUxDSnpkSEoxWTNSMWNtVXZYMjFoYVc0dWMyTnpjeUlzSW5OMGNuVmpkSFZ5WlM5ZlptOXZkR1Z5TG5OamMzTWlMQ0p6ZEhKMVkzUjFjbVV2WDNCeWIycGxZM1J6TG5OamMzTWlMQ0p6ZEhKMVkzUjFjbVV2WDJOdmJuUmhZM1F1YzJOemN5SXNJbU52YlhCdmJtVnVkSE12WDJod0xXZHlhV1F1YzJOemN5SXNJbU52YlhCdmJtVnVkSE12WDNOMFlXWm1MV3hwYzNRdWMyTnpjeUlzSW1OdmJYQnZibVZ1ZEhNdlgyUnBZV3h2Wnk1elkzTnpJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4cUlFbHVhWFJwWVd4cGVtVWdLaTljYmtCcGJYQnZjblFnSjJKaGMyVXZhV052Ym5Nbk8xeHVRR2x0Y0c5eWRDQW5ZbUZ6WlM5eVpYTmxkQ2M3WEc1QWFXMXdiM0owSUNkaVlYTmxMM1poY21saFlteGxjeWM3WEc1QWFXMXdiM0owSUNkaVlYTmxMMjFwZUdsdWN5YzdYRzVjYmtCcGJYQnZjblFnSjJOdmJYQnZibVZ1ZEhNdlkyOXdlU2M3WEc1Y2JrQnBiWEJ2Y25RZ0ozTjBjblZqZEhWeVpTOXNhWE4wYVc1bkxXZHlhV1FuTzF4dVFHbHRjRzl5ZENBbmMzUnlkV04wZFhKbEwzQmhaMlVuTzF4dVFHbHRjRzl5ZENBbmMzUnlkV04wZFhKbEwzQnliMnBsWTNSekp6dGNia0JwYlhCdmNuUWdKM04wY25WamRIVnlaUzlqYjI1MFlXTjBKenRjYmx4dVFHbHRjRzl5ZENBblkyOXRjRzl1Wlc1MGN5OW9jQzFuY21sa0p6dGNia0JwYlhCdmNuUWdKMk52YlhCdmJtVnVkSE12YzNSaFptWXRiR2x6ZENjN1hHNUFhVzF3YjNKMElDZGpiMjF3YjI1bGJuUnpMMlJwWVd4dlp5YzdYRzRpTENKQVptOXVkQzFtWVdObElIdGNibHgwWm05dWRDMW1ZVzFwYkhrNklGd2ljbTFoTFdsamIyNXpYQ0k3WEc1Y2RITnlZem9nZFhKc0tDY3VMaTltYjI1MGN5OXliV0V0YVdOdmJuTXVaVzkwSnlrN1hHNWNkSE55WXpvZ2RYSnNLQ2N1TGk5bWIyNTBjeTl5YldFdGFXTnZibk11Wlc5MFB5TnBaV1pwZUNjcElHWnZjbTFoZENnblpXOTBKeWtzWEc1Y2RGeDBkWEpzS0NjdUxpOW1iMjUwY3k5eWJXRXRhV052Ym5NdWQyOW1aakluS1NCbWIzSnRZWFFvSjNkdlptWXlKeWtzWEc1Y2RGeDBkWEpzS0NjdUxpOW1iMjUwY3k5eWJXRXRhV052Ym5NdWQyOW1aaWNwSUdadmNtMWhkQ2duZDI5bVppY3BMRnh1WEhSY2RIVnliQ2duTGk0dlptOXVkSE12Y20xaExXbGpiMjV6TG5SMFppY3BJR1p2Y20xaGRDZ25kSEoxWlhSNWNHVW5LU3hjYmx4MFhIUjFjbXdvSnk0dUwyWnZiblJ6TDNKdFlTMXBZMjl1Y3k1emRtY2pjbTFoTFdsamIyNXpKeWtnWm05eWJXRjBLQ2R6ZG1jbktUdGNibjFjYmx4dUxtbGpPbUpsWm05eVpTQjdYRzVjZEdadmJuUXRabUZ0YVd4NU9pQmNJbkp0WVMxcFkyOXVjMXdpTzF4dVhIUmNkQzEzWldKcmFYUXRabTl1ZEMxemJXOXZkR2hwYm1jNklHRnVkR2xoYkdsaGMyVmtPMXh1WEhSY2RDMXRiM290YjNONExXWnZiblF0YzIxdmIzUm9hVzVuT2lCbmNtRjVjMk5oYkdVN1hHNWNkR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYmx4MFptOXVkQzEyWVhKcFlXNTBPaUJ1YjNKdFlXdzdYRzVjZEdadmJuUXRkMlZwWjJoME9pQnViM0p0WVd3N1hHNWNkQzhxSUhOd1pXRnJPaUJ1YjI1bE95QnZibXg1SUc1bFkyVnpjMkZ5ZVNCcFppQnViM1FnZFhOcGJtY2dkR2hsSUhCeWFYWmhkR1VnZFc1cFkyOWtaU0J5WVc1blpTQW9abWx5YzNSSGJIbHdhQ0J2Y0hScGIyNHBJQ292WEc1Y2RIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmx4MGRHVjRkQzEwY21GdWMyWnZjbTA2SUc1dmJtVTdYRzU5WEc1Y2JseHVMbWxqTFdKaGNuTTZZbVZtYjNKbElIdGNibHgwWTI5dWRHVnVkRG9nWENKY1hFVXdNREZjSWp0Y2JuMWNibHh1TG1sakxXTnNiM05sT21KbFptOXlaU0I3WEc1Y2RHTnZiblJsYm5RNklGd2lYRnhGTURBeVhDSTdYRzU5WEc0aUxDSXFJSHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQmliM0prWlhJNklEQTdYRzRnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQldaWEprWVc1aExDQnpZVzV6TFhObGNtbG1PMXh1ZlZ4dVhHNTFiQ3hjYm05c0lIdGNiaUFnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYm4xY2JseHVZU0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1ZlZ4dVhHNHVjM0l0YjI1c2VTQjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkMmxrZEdnNklERndlRHRjYmlBZ2FHVnBaMmgwT2lBeGNIZzdYRzRnSUhCaFpHUnBibWM2SURBN1hHNGdJRzFoY21kcGJqb2dMVEZ3ZUR0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnWTJ4cGNEb2djbVZqZENnd0xEQXNNQ3d3S1R0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1ZlZ4dUlpd2lKRzE0VnpvZ01USTBNSEI0TzF4dUpHZDFkSFJsY2pvZ01qQndlRHRjYmx4dUpIZG9hWFJsT2lBalJrWkdSa1pHTzF4dUpHSnNZV05yT2lBak1URXhNVEV4TzF4dVhHNGtjSEpwYldGeWVUb2dJekl3TWpBeU1EdGNiaVJ6WldOdmJtUmhjbms2SUNNMk16WTFOams3WEc0a1lXTmpaVzUwT2lBalJrWXlNREl3TzF4dUpHZHlZWGt4T2lBalF6aERPVU5HTzF4dVhHNGtiV1ZrYVdGWWN6b2dYQ0p6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklETTNOWEI0S1Z3aU8xeHVKRzFsWkdsaFVHaHZibVU2SUZ3aWMyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEzTmpjdU9YQjRLVndpTzF4dUpHMWxaR2xoVkdGaWJHVjBPaUJjSW5OamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncFhDSTdYRzRrYldWa2FXRlVZV0pzWlhSUGJteDVPaUJjSW5OamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncElHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1ESTBMamx3ZUNsY0lqdGNiaVJ0WldScFlWUnZaMmRzWlVobFlXUmxjam9nWENKelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJREV3TWpRdU9YQjRLVndpTzF4dUpHMWxaR2xoUkdWemEzUnZjRG9nWENKelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJREV3TWpWd2VDbGNJanRjYmlSdFpXUnBZVVoxYkd3NklGd2ljMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBamV5UnRlRmQ5S1Z3aU8xeHVJaXdpUUcxcGVHbHVJR052Ym5SbGJuUlhhV1IwYUNCN1hHNGdJRzFoZUMxM2FXUjBhRG9nSkcxNFZ6dGNiaUFnYldGeVoybHVPaUJoZFhSdk8xeHVJQ0J3WVdSa2FXNW5PaUF3SUNSbmRYUjBaWEk3WEc1OVhHNWNia0J0YVhocGJpQm9iM1psY2lCN1hHNGdJQ1k2YUc5MlpYSXNYRzRnSUNZNlptOWpkWE1nZTF4dUlDQWdJRUJqYjI1MFpXNTBPMXh1SUNCOVhHNTlYRzRpTENKb01Td2dMbWd4SUh0Y2JseHVmVnh1WEc1b01pd2dMbWd5SUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TkhCNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaRHRjYmlBZ2JXRnlaMmx1T2lBeFpXMGdNRHRjYmx4dUlDQitJR2d5TEZ4dUlDQitJQzVvTWlCN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ00yVnRPMXh1SUNCOVhHNWNiaUFnYzIxaGJHd2dlMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJ1YjNKdFlXdzdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhNWEI0TzF4dUlDQjlYRzU5WEc1Y2JtZ3hMQ0F1YURFZ2UxeHVYRzU5WEc1Y2JtZ3hMQ0F1YURFZ2UxeHVYRzU5WEc1Y2JtZ3hMQ0F1YURFZ2UxeHVYRzU5WEc1Y2JtZ3hMQ0F1YURFZ2UxeHVYRzU5WEc1Y2JuQWdlMXh1SUNCbWIyNTBMWE5wZW1VNklERXhjSGc3WEc0Z0lHMWhjbWRwYmpvZ01XVnRJREE3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TGpSbGJUdGNibjFjYmlJc0lpNXNhWE4wYVc1bkxXZHlhV1FnZTF4dUlDQnBiV2NnZTF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUdobGFXZG9kRG9nWVhWMGJ6dGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpJMWN6dGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnZWkxcGJtUmxlRG9nTUR0Y2JpQWdmVnh1WEc0Z0lHRWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dUlDQWdJSFJsZUhRdGMyaGhaRzkzT2lBd2NIZ2dNSEI0SURKd2VDQWtZbXhoWTJzN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pHZHlZWGt4TzF4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYUc5MlpYSWdlMXh1SUNBZ0lDQWdhVzFuSUh0Y2JpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ0xqVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdhRElnZTF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0J0WVhKbmFXNDZJREE3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNVHRjYmlBZ0lDQndZV1JrYVc1bk9pQWtaM1YwZEdWeUlDOGdNanRjYmlBZ2ZWeHVYRzRnSUVCdFpXUnBZU0FqZXlSdFpXUnBZVlJoWW14bGRIMGdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdabXhsZUMxbWJHOTNPaUJ5YjNjZ2QzSmhjRHRjYmlBZ0lDQnRZWEpuYVc0NklDMGpleVJuZFhSMFpYSjlJQzhnTWp0Y2JseHVJQ0FnSUdGeWRHbGpiR1VnZTF4dUlDQWdJQ0FnZDJsa2RHZzZJRFV3SlR0Y2JpQWdJQ0FnSUdac1pYZzZJREFnTUNBMU1DVTdYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQWtaM1YwZEdWeUlDOGdNanRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JBYldWa2FXRWdJM3NrYldWa2FXRkVaWE5yZEc5d2ZTQjdYRzRnSUNBZ1lYSjBhV05zWlNCN1hHNGdJQ0FnSUNCM2FXUjBhRG9nTXpNdU15VTdYRzRnSUNBZ0lDQm1iR1Y0T2lBd0lEQWdNek11TXlVN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc0aUxDSXVZM2NnZTF4dUlDQnRhVzR0YUdWcFoyaDBPaUF4TURCMmFEdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNibHh1SUNCQWFXMXdiM0owSUNkb1pXRmtaWEluTzF4dUlDQkFhVzF3YjNKMElDZHRZV2x1Snp0Y2JpQWdRR2x0Y0c5eWRDQW5abTl2ZEdWeUp6dGNibjFjYmlJc0lpWWdQaUJvWldGa1pYSWdlMXh1SUNBK0lHUnBkaUI3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZMjl1ZEdWdWRGZHBaSFJvTzF4dVhHNGdJQ0FnY0c5emFYUnBiMjQ2SUhOMGFXTnJlVHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4dUlDQWdJSG90YVc1a1pYZzZJREV3TURBN1hHNGdJSDFjYmx4dUlDQm9NU0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TTNCNE8xeHVJQ0FnSUdOdmJHOXlPaUFrWVdOalpXNTBPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVYRzRnSUNBZ1lTQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUdOdmJHOXlPaUFrWVdOalpXNTBPMXh1SUNBZ0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTVRGd2VDQXdJREU0Y0hnZ01EdGNibHh1SUNBZ0lDQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pITmxZMjl1WkdGeWVUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXViM1psY214aGVTQjdYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoVUdodmJtVjlJSHRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNiaUFnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQXhNREIyYUR0Y2JpQWdJQ0FnSUhvdGFXNWtaWGc2SURrd01EQTdYRzRnSUNBZ0lDQjBiM0E2SURBN1hHNGdJQ0FnSUNCc1pXWjBPaUF3TzF4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2drY0hKcGJXRnllU3d1T1RVcE8xeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLREV3TUNVcE8xeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eU5YTTdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNiaUFnSUNCOVhHNGdJQ0FnUUcxbFpHbGhJQ043SkcxbFpHbGhWR0ZpYkdWMGZTQjdYRzRnSUNBZ0lDQm1iR1Y0TFdkeWIzYzZJREU3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCbWJHVjRMV1Z1WkR0Y2JpQWdJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTG5SdloyZHNaUzEwY21sbloyVnlJSHRjYmlBZ0lDQWdJR2hsYVdkb2REb2dORFZ3ZUR0Y2JpQWdJQ0FnSUhkcFpIUm9PaUExTW5CNE8xeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lIUnZjRG9nTUhCNE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURCd2VEdGNiaUFnSUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURJMGNIZzdYRzVjYmlBZ0lDQWdJRUJ0WldScFlTQWpleVJ0WldScFlWUmhZbXhsZEgwZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM1dFpXNTFMWFJ2WjJkc1pUcGphR1ZqYTJWa0lIdGNiaUFnSUNCK0lDNXZkbVZ5YkdGNUlIdGNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d3S1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUxtNWhkaTF3Y21sdFlYSjVJSHRjYmlBZ1pteGxlQzFuY205M09pQXhPMXh1SUNCQWJXVmthV0VnSTNza2JXVmthV0ZRYUc5dVpYMGdlMXh1SUNBZ0lENGdaR2wyTEZ4dUlDQWdJSFZzSUh0Y2JpQWdJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQjFiQ0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNibHh1SUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVZSaFlteGxkSDBnZTF4dUlDQWdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJSEp2ZHp0Y2JpQWdJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWm14bGVDMWxibVE3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklDMDNMalZ3ZUR0Y2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01USndlRHRjYmlBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJR0VnZTF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01UaHdlQ0EzTGpWd2VDQXhPSEI0SURFM0xqVndlRHRjYmlBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYRzRnSUNBZ0lDQmpiMnh2Y2pvZ2NtZGlZU2drZDJocGRHVXNMamNwTzF4dUlDQWdJSDFjYmx4dUlDQWdJRUJ0WldScFlTQWpleVJ0WldScFlWUmhZbXhsZEgwZ2UxeHVJQ0FnSUNBZ1kyOXNiM0k2SUNSelpXTnZibVJoY25rN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBeE1YQjRJRGN1TlhCNElERTRjSGdnTVRjdU5YQjRPMXh1WEc0Z0lDQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQWtZV05qWlc1ME8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHVkRzluWjJ4bExYUnlhV2RuWlhJZ2UxeHVJQ0JBYldWa2FXRWdJM3NrYldWa2FXRlVZV0pzWlhSOUlIdGNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNCOVhHNTlYRzRpTENJbUlENGdiV0ZwYmlCN1hHNGdJR1pzWlhndFozSnZkem9nTVR0Y2JseHVJQ0ErSUdScGRpQjdYRzRnSUNBZ1FHbHVZMngxWkdVZ1kyOXVkR1Z1ZEZkcFpIUm9PMXh1SUNCOVhHNTlYRzVjYmk1dFlXbHVMV052Ym5SbGJuUWdlMXh1SUNCamIyeHZjam9nSkhObFkyOXVaR0Z5ZVR0Y2JseHVJQ0JBYldWa2FXRWdJM3NrYldWa2FXRlVZV0pzWlhSOUlIdGNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1WEc0Z0lDQWdQaUJrYVhZZ2UxeHVJQ0FnSUNBZ0pqcG1hWEp6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF5TlNVN1hHNGdJQ0FnSUNBZ0lHWnNaWGc2SURBZ01DQXlOU1U3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJQ1JuZFhSMFpYSWdMeUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnSmpwc1lYTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lDQWdabXhsZUMxbmNtOTNPaUF4TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJQ1JuZFhSMFpYSWdMeUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1SWl3aUppQStJR1p2YjNSbGNpQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01USndlRHRjYmlBZ1kyOXNiM0k2SUNSd2NtbHRZWEo1TzF4dUlDQndZV1JrYVc1bk9pQXlOSEI0SURBN1hHNWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhWR0ZpYkdWMGZTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhNSEI0TzF4dUlDQjlYRzVjYmlBZ0xtTnZiWEJoYm5rdGJtRnRaU0I3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzRnSUgxY2JseHVJQ0JoSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dKSEJ5YVcxaGNuazdYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHVJQ0FnSUNBZ1kyOXNiM0k2SUNSaFkyTmxiblE3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnUGlCa2FYWWdlMXh1SUNBZ0lFQnBibU5zZFdSbElHTnZiblJsYm5SWGFXUjBhRHRjYmx4dUlDQWdJRDRnWkdsMklIdGNiaUFnSUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJ6Y0dGalpTMWlaWFIzWldWdU8xeHVJQ0FnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJSFZzSUh0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhaVzA3WEc0Z0lDQWdiR2tnZTF4dUlDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVOR1Z0TzF4dUlDQWdJSDFjYmlBZ0lDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGVVlXSnNaWFI5SUh0Y2JpQWdJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJR3hwSUh0Y2JpQWdJQ0FnSUNBZ0lDQXJJR3hwT21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbnhjSWp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREFnT0hCNE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1SWl3aUxuQnliMnBsWTNRdGJHbHpkQ0I3WEc1Y2JuMWNibHh1TG14cGMzUnBibWN0ZEdGaWJHVWdlMXh1SUNCMFlXSnNaU0I3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdZbTl5WkdWeUxXTnZiR3hoY0hObE9pQmpiMnhzWVhCelpUdGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXpPSEI0TzF4dUlDQjlYRzVjYmlBZ2RHaGxZV1FnZTF4dUlDQWdJR0p2Y21SbGNpMWliM1IwYjIwNklERndlQ0J6YjJ4cFpDQWtjSEpwYldGeWVUdGNiaUFnZlZ4dVhHNGdJSFJvSUh0Y2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVEp3ZUR0Y2JpQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVJQ0FnSUhCaFpHUnBibWM2SURod2VDQXdPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpJMWN6dGNiaUFnSUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pHRmpZMlZ1ZER0Y2JpQWdJQ0FnSUc5MWRHeHBibVU2SURBN1hHNWNiaUFnSUNBZ0lHUnBkanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJRzl3WVdOcGRIazZJREU3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdaR2wySUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzQ3WEc0Z0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dKR2QxZEhSbGNqdGNibHh1SUNBZ0lDQWdKanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXdPMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREE3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF6ZEhsc1pUb2djMjlzYVdRN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxM2FXUjBhRG9nTUNBMGNIZ2dObkI0SURSd2VEdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWRDQjBjbUZ1YzNCaGNtVnVkQ0FrY0hKcGJXRnllU0IwY21GdWMzQmhjbVZ1ZER0Y2JpQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNJanRjYmlBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTGpVN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1qVnpPMXh1SUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d4T0RCa1pXY3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDWmJZWEpwWVMxemIzSjBQVndpWVhOalpXNWthVzVuWENKZExGeHVJQ0FnSUNaYllYSnBZUzF6YjNKMFBWd2laR1Z6WTJWdVpHbHVaMXdpWFNCN1hHNGdJQ0FnSUNCamIyeHZjam9nSkdGalkyVnVkRHRjYmlBZ0lDQWdJR1JwZGpwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmx0aGNtbGhMWE52Y25ROVhDSmtaWE5qWlc1a2FXNW5YQ0pkSUh0Y2JpQWdJQ0FnSUdScGRqcGhablJsY2lCN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEQXBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJSFJrSUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF4WlcwZ01EdGNiaUFnSUNBbUxGeHVJQ0FnSUdneUlIdGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVEZ3ZUR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JvTWlCN1hHNGdJQ0FnSUNCdFlYSm5hVzQ2SURBN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1lTQjdYRzRnSUNBZ1kyOXNiM0k2SUNSd2NtbHRZWEo1TzF4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JseHVJQ0FnSUVCcGJtTnNkV1JsSUdodmRtVnlJSHRjYmlBZ0lDQWdJR052Ykc5eU9pQWtZV05qWlc1ME8xeHVJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1VN1hHNGdJQ0FnSUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVYRzR1Y0hKdmFtVmpkQzFwYldGblpYTWdlMXh1SUNCcGJXY2dlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdmVnh1WEc0Z0lHWnBaM1Z5WlNCN1hHNGdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREkwY0hnN1hHNGdJSDFjYmx4dUlDQm1hV2RqWVhCMGFXOXVJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJRGx3ZUR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ0tERXhJQzhnT1NrZ0tpQXhaVzA3WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVdWdE8xeHVJQ0FnSUdOdmJHOXlPaUFrYzJWamIyNWtZWEo1TzF4dUlDQjlYRzVjYmlBZ1FHMWxaR2xoSUNON0pHMWxaR2xoVkdGaWJHVjBmU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JtYkdWNExXWnNiM2M2SUhKdmR5QjNjbUZ3TzF4dUlDQWdJRzFoY21kcGJqb2dMU043SkdkMWRIUmxjaUF2SURKOU8xeHVYRzRnSUNBZ1ptbG5kWEpsSUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUExTUNVN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBa1ozVjBkR1Z5SUM4Z01qdGNibHh1SUNBZ0lDQWdKanBtYVhKemRDMWphR2xzWkNCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVYRzVjYmk1d2NtOXFaV04wTFdSbGRHRnBiQ0I3WEc0Z0lDOHZJRzFoYVc0Z2UxeHVJQ0F2THlBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDOHZJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJpMXlaWFpsY25ObE8xeHVJQ0F2THlCOVhHNWNiaUFnYldGcGJpQjdYRzRnSUNBZ2JtRjJJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV5Y0hnN1hHNWNiaUFnSUNBZ0lHRWdlMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKSE5sWTI5dVpHRnllVHRjYmlBZ0lDQWdJQ0FnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR0ZqWTJWdWREdGNiaUFnSUNBZ0lDQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJSFZ1WkdWeWJHbHVaVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQWdJQ0FnT21acGNuTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xURTBjSGdwTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdPbXhoYzNRdFkyaHBiR1FnZTF4dUlDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d4TkhCNEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzV0WVdsdUxXTnZiblJsYm5RZ2UxeHVJQ0FnSUQ0Z1pHbDJPbXhoYzNRdFkyaHBiR1FnZTF4dUlDQWdJQ0FnUUcxbFpHbGhJQ043SkcxbFpHbGhSR1Z6YTNSdmNIMGdlMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dOVEFsTzF4dUlDQWdJQ0FnSUNCbWJHVjRMV2R5YjNjNklEQTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTV3Y205cVpXTjBMV0Z5WTJocGRtVWdlMXh1SUNCdFlXbHVJSHRjYmlBZ0lDQnVZWFlnZTF4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE5IQjRPMXh1WEc0Z0lDQWdJQ0JzYVNCN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUM0eVpXMDdYRzVjYmlBZ0lDQWdJQ0FnSmpwc1lYTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeVpXMDdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnWVNCN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBa2MyVmpiMjVrWVhKNU8xeHVYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR0ZqWTJWdWREdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNZdVlXTjBhWFpsSUh0Y2JpQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHRmpZMlZ1ZER0Y2JpQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pEdGNibHh1SUNBZ0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUdodmRtVnlJSHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYm4xY2JpSXNJaTVqYjI1MFlXTjBMV2x1Wm04Z2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFeWNIZzdYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREpsYlR0Y2JseHVJQ0JoSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dKSE5sWTI5dVpHRnllVHRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUlIdGNiaUFnSUNBZ0lHTnZiRzl5T2lBa1lXTmpaVzUwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUd4cExtRmtaSEpsYzNNZ2UxeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREZsYlR0Y2JpQWdmVnh1ZlZ4dVhHNWNiaTVqYjI1MFlXTjBJSHRjYmlBZ2FXWnlZVzFsSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdmVnh1ZlZ4dUlpd2lMbWh3TFdkeWFXUWdlMXh1SUNCQWJXVmthV0VnSTNza2JXVmthV0ZVWVdKc1pYUjlJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm5jbWxrTzF4dUlDQWdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ01XWnlJREZtY2lBeFpuSTdYRzRnSUNBZ1ozSnBaQzFoZFhSdkxYSnZkM002SURGbWNqdGNiaUFnSUNCbmNtbGtMV0YxZEc4dFpteHZkem9nWkdWdWMyVTdYRzRnSUNBZ1ozSnBaQzFuWVhBNklDUm5kWFIwWlhJZ0x5QXlPMXh1SUNCOVhHNWNiaUFnUGlCa2FYWWdlMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUNSbmRYUjBaWElnTHlBeU8xeHVYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoVkdGaWJHVjBmU0I3WEc0Z0lDQWdJQ0J0WVhKbmFXNDZJREE3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnUUcxbFpHbGhJQ043SkcxbFpHbGhSR1Z6YTNSdmNIMGdlMXh1SUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nTVdaeUlERm1jaUF4Wm5JZ01XWnlPMXh1SUNCOVhHNWNiaUFnUGlBdVpIY2dlMXh1SUNBZ0lHZHlhV1F0WTI5c2RXMXVMV1Z1WkRvZ2MzQmhiaUF5TzF4dUlDQjlYRzVjYmlBZ1BpQXVaSFFnZTF4dUlDQWdJR2R5YVdRdGNtOTNMV1Z1WkRvZ2MzQmhiaUF5TzF4dUlDQjlYRzVjYmlBZ2FXMW5JSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnYjJKcVpXTjBMV1pwZERvZ1kyOTJaWEk3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lIb3RhVzVrWlhnNklEQTdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eU5YTTdYRzRnSUgxY2JseHVJQ0F1YUhBdFlteDFjbUlnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNSbmNtRjVNVHRjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsTzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVRad2VEdGNiaUFnSUNCd1lXUmthVzVuT2lBa1ozVjBkR1Z5SUM4Z01qdGNibHh1SUNBZ0lFQnRaV1JwWVNBamV5UnRaV1JwWVVSbGMydDBiM0I5SUh0Y2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qQndlRHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG0xbGJuVXRiR2x1YXlCN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ1ltRmphMmR5YjNWdVpEb2dKSEJ5YVcxaGNuazdYRzVjYmlBZ1BpQmthWFlnZTF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQjZMV2x1WkdWNE9pQXhNRHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREU0Y0hnN1hHNGdJQ0FnWTI5c2IzSTZJQ1IzYUdsMFpUdGNiaUFnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1SUNBZ0lIUmxlSFF0YzJoaFpHOTNPaUF3Y0hnZ01IQjRJREp3ZUNBa1lteGhZMnM3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lDNHlOWE03WEc0Z0lDQWdMeTl3WVdSa2FXNW5PaUFrWjNWMGRHVnlJQzhnTWlBd08xeHVYRzRnSUNBZ1FHMWxaR2xoSUNON0pHMWxaR2xoVkdGaWJHVjBmU0I3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURJNGNIZzdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHVJQ0FnSUdsdFp5QjdYRzRnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVOVHRjYmlBZ0lDQjlYRzRnSUNBZ1BpQmthWFlnZTF4dUlDQWdJQ0FnTHk5dmNHRmphWFI1T2lBdU56dGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQkFiV1ZrYVdFZ0kzc2tiV1ZrYVdGVVlXSnNaWFI5SUh0Y2JpQWdJQ0FtTG5Sc0lIdGNiaUFnSUNBZ0lENGdaR2wySUh0Y2JpQWdJQ0FnSUNBZ2RHOXdPaUFrWjNWMGRHVnlJQzhnTkR0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nSkdkMWRIUmxjaUF2SURRN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJTMXZjbWxuYVc0NklHeGxablFnWTJWdWRHVnlPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDWXVZbXdnZTF4dUlDQWdJQ0FnUGlCa2FYWWdlMXh1SUNBZ0lDQWdJQ0JpYjNSMGIyMDZJQ1JuZFhSMFpYSWdMeUEwTzF4dUlDQWdJQ0FnSUNCc1pXWjBPaUFrWjNWMGRHVnlJQzhnTkR0Y2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ2JHVm1kQ0JqWlc1MFpYSTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0ppNTBjaUI3WEc0Z0lDQWdJQ0ErSUdScGRpQjdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ0pHZDFkSFJsY2lBdklEUTdYRzRnSUNBZ0lDQWdJSEpwWjJoME9pQWtaM1YwZEdWeUlDOGdORHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0TFc5eWFXZHBiam9nY21sbmFIUWdZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUNZdVluSWdlMXh1SUNBZ0lDQWdQaUJrYVhZZ2UxeHVJQ0FnSUNBZ0lDQmliM1IwYjIwNklDUm5kWFIwWlhJZ0x5QTBPMXh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dKR2QxZEhSbGNpQXZJRFE3WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlMxdmNtbG5hVzQ2SUhKcFoyaDBJR05sYm5SbGNqdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBbUxtaHZjaUI3WEc0Z0lDQWdJQ0ErSUdScGRpQjdYRzRnSUNBZ0lDQWdJQzh2ZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvT1RCa1pXY3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJaXdpTG5OMFlXWm1MV3hwYzNRZ2UxeHVYRzU5WEc0aUxDSXVaR2xoYkc5bklIdGNiaUFnZDJsa2RHZzZJREV3TUhaM08xeHVJQ0JvWldsbmFIUTZJREV3TUhab08xeHVJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUTdYRzRnSUhSdmNEb2dNRHRjYmlBZ2JHVm1kRG9nTUR0Y2JpQWdjRzlwYm5SbGNpMWxkbVZ1ZEhNNklHNXZibVU3WEc0Z0lDOHZZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ2IzWmxjbVpzYjNjNklHRjFkRzg3WEc0Z0lIb3RhVzVrWlhnNklEazVPVGs3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3WEc1Y2JpQWdMbVJwWVd4dlp5MXZjR1Z1SUNZZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCOVhHNTlYRzRpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1owSkJRV2RDTzBGRFFXaENMRlZCUVZVN1JVRkRWQ3hYUVVGWExFVkJRVVVzVjBGQlZ6dEZRVU40UWl4SFFVRkhMRVZCUVVVc05rSkJRVFpDTzBWQlEyeERMRWRCUVVjc1JVRkJSU3h2UTBGQmIwTXNRMEZCUXl4aFFVRmhMRVZCUTNSRUxDdENRVUVyUWl4RFFVRkRMR1ZCUVdVc1JVRkRMME1zT0VKQlFUaENMRU5CUVVNc1kwRkJZeXhGUVVNM1F5dzJRa0ZCTmtJc1EwRkJReXhyUWtGQmEwSXNSVUZEYUVRc2RVTkJRWFZETEVOQlFVTXNZVUZCWVRzN08wRkJSM1pFTEVGQlFVRXNSMEZCUnl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOV0xGZEJRVmNzUlVGQlJTeFhRVUZYTzBWQlEzWkNMSE5DUVVGelFpeEZRVUZGTEZkQlFWYzdSVUZEYmtNc2RVSkJRWFZDTEVWQlFVVXNVMEZCVXp0RlFVTnVReXhWUVVGVkxFVkJRVVVzVFVGQlRUdEZRVU5zUWl4WlFVRlpMRVZCUVVVc1RVRkJUVHRGUVVOd1FpeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVTnVRaXcwUmtGQk5FWTdSVUZETlVZc1pVRkJaU3hGUVVGRkxFbEJRVWs3UlVGRGNrSXNZMEZCWXl4RlFVRkZMRWxCUVVrN1EwRkRjRUk3TzBGQlIwUXNRVUZCUVN4UlFVRlJMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMllzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYUVJN08wRkJSVVFzUVVGQlFTeFRRVUZUTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJoQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyaENPenRCUXpkQ1JDeEJRVUZCTEVOQlFVTXNRMEZCUXp0RlFVTkJMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxGVkJRVlVzUlVGQlJTeFZRVUZWTzBWQlEzUkNMRmRCUVZjc1JVRkJSU3h0UWtGQmJVSTdRMEZEYWtNN08wRkJSVVFzUVVGQlFTeEZRVUZGTzBGQlEwWXNSVUZCUlN4RFFVRkRPMFZCUTBRc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UTBGRGFrSTdPMEZCUlVRc1FVRkJRU3hEUVVGRExFTkJRVU03UlVGRFFTeFZRVUZWTEVWQlFVVXNVVUZCVVR0RFFVTnlRanM3UVVGRlJDeEJRVUZCTEZGQlFWRXNRMEZCUXp0RlFVTlFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUTFZc1RVRkJUU3hGUVVGRkxFZEJRVWM3UlVGRFdDeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVVVGQlVTeEZRVUZGTEUxQlFVMDdSVUZEYUVJc1NVRkJTU3hGUVVGRkxHZENRVUZoTzBWQlEyNUNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wTkJRMVk3TzBGSGRFSkVMRUZCUVVFc1JVRkJSU3hGUVVGRkxFZEJRVWNzUTBGQlF6dEZRVU5PTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1YwRkJWeXhGUVVGRkxFbEJRVWs3UlVGRGFrSXNUVUZCVFN4RlFVRkZMRXRCUVVzN1EwRlhaRHM3UVVGa1JDeEJRVXRGTEVWQlRFRXNSMEZMUlN4RlFVRkZPMEZCVEU0c1JVRkJSU3hIUVUxRkxFZEJRVWNzUlVGT1NDeEhRVUZITEVkQlMwZ3NSVUZCUlR0QlFVeEdMRWRCUVVjc1IwRk5TQ3hIUVVGSExFTkJRVU03UlVGRFNpeFZRVUZWTEVWQlFVVXNSMEZCUnp0RFFVTm9RanM3UVVGU1NDeEJRVlZGTEVWQlZrRXNRMEZWUVN4TFFVRkxMRVZCVmtnc1IwRkJSeXhEUVZWTUxFdEJRVXNzUTBGQlF6dEZRVU5LTEZkQlFWY3NSVUZCUlN4TlFVRk5PMFZCUTI1Q0xGTkJRVk1zUlVGQlJTeEpRVUZKTzBOQlEyaENPenRCUVcxQ1NDeEJRVUZCTEVOQlFVTXNRMEZCUXp0RlFVTkJMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzVFVGQlRTeEZRVUZGTEV0QlFVczdSVUZEWWl4WFFVRlhMRVZCUVVVc1MwRkJTenREUVVOdVFqczdRVU40UTBRc1FVRkRSU3hoUVVSWExFTkJRMWdzUjBGQlJ5eERRVUZETzBWQlEwWXNUMEZCVHl4RlFVRkZMRXRCUVVzN1JVRkRaQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1ZVRkJWU3hGUVVGRkxGRkJRVkU3UlVGRGNFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEV0RzN1FVRlNTQ3hCUVZWRkxHRkJWbGNzUTBGVldDeERRVUZETEVOQlFVTTdSVUZEUVN4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVOa0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRXRCUVVzc1JVaFdSQ3hQUVVGUE8wVkhWMWdzVjBGQlZ5eEZRVUZGTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEU0Zad1FpeFBRVUZQTzBWSFYxZ3NWVUZCVlN4RlNFNU9MRTlCUVU4N1EwZGhXanM3UVVGMFFrZ3NRVUZyUWswc1lVRnNRazhzUTBGVldDeERRVUZETEVGR1NFRXNUVUZCVFN4RFJWZElMRWRCUVVjc1JVRnNRbFFzWVVGQllTeERRVlZZTEVOQlFVTXNRVVpHUVN4TlFVRk5MRU5GVlVnc1IwRkJSeXhEUVVGRE8wVkJRMFlzVDBGQlR5eEZRVUZGTEVWQlFVVTdRMEZEV2pzN1FVRndRbEFzUVVGM1FrVXNZVUY0UWxjc1EwRjNRbGdzUlVGQlJTeERRVUZETzBWQlEwUXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4SlFVRkpMRVZCUVVVc1EwRkJRenRGUVVOUUxFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhQUVVGUExFVkJRVVVzU1VGQlZ6dERRVU55UWpzN1FVRkZSQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYWtOeVF5eEJRVUZCTEdGQlFXRXNRMEZCUXp0SlFXdERWaXhQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEZOQlFWTXNSVUZCUlN4UlFVRlJPMGxCUTI1Q0xFMUJRVTBzUlVGQlJTeFRRVUZuUWp0SFFXVXpRanRGUVc1RVJDeEJRWE5EU1N4aFFYUkRVeXhEUVhORFZDeFBRVUZQTEVOQlFVTTdTVUZEVGl4TFFVRkxMRVZCUVVVc1IwRkJSenRKUVVOV0xFbEJRVWtzUlVGQlJTeFBRVUZQTzBsQlEySXNUMEZCVHl4RlFVRkZMRWxCUVZjN1IwRkRja0k3T3p0QlFVZElMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVUUzUTNSRExFRkJPRU5KTEdGQk9VTlRMRU5CT0VOVUxFOUJRVThzUTBGQlF6dEpRVU5PTEV0QlFVc3NSVUZCUlN4TFFVRkxPMGxCUTFvc1NVRkJTU3hGUVVGRkxGTkJRVk03UjBGRGFFSTdPenRCUTJwRVRDeEJRVUZCTEVkQlFVY3NRMEZCUXp0RlFVTkdMRlZCUVZVc1JVRkJSU3hMUVVGTE8wVkJRMnBDTEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc1kwRkJZeXhGUVVGRkxFMUJRVTA3UTBGTGRrSTdPMEZCVWtRc1FVTkRSU3hIUkVSRExFZERRVU1zVFVGQlRTeEhRVU5PTEVkQlFVY3NRMEZCUXp0RlNrRk9MRk5CUVZNc1JVUkVUQ3hOUVVGTk8wVkRSVllzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1EwRkJReXhEUkVaSUxFbEJRVWs3UlV0SFZDeFJRVUZSTEVWQlFVVXNUVUZCVFR0RlFVTm9RaXhQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEZkQlFWY3NSVUZCUlN4TlFVRk5PMFZCUTI1Q0xHVkJRV1VzUlVGQlJTeGhRVUZoTzBWQlF6bENMRTlCUVU4c1JVRkJSU3hKUVVGSk8wTkJRMlE3TzBGRVZFZ3NRVU5YUlN4SFJGaERMRWREUVVNc1RVRkJUU3hEUVZkU0xFVkJRVVVzUTBGQlF6dEZRVU5FTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1MwRkJTeXhGVEV4QkxFOUJRVTg3UlV0TldpeFhRVUZYTEVWQlFVVXNTVUZCU1R0RFFWbHNRanM3UVVReFFrZ3NRVU5uUWtrc1IwUm9Ra1FzUjBOQlF5eE5RVUZOTEVOQlYxSXNSVUZCUlN4RFFVdEJMRU5CUVVNc1EwRkJRenRGUVVOQkxFOUJRVThzUlVGQlJTeExRVUZMTzBWQlEyUXNTMEZCU3l4RlRGWkdMRTlCUVU4N1JVdFhWaXhsUVVGbExFVkJRVVVzU1VGQlNUdEZRVU55UWl4UFFVRlBMRVZCUVVVc1lVRkJZVHREUVV0MlFqczdRVVI2UWt3c1FVaFBSU3hIUjFCRExFZERRVU1zVFVGQlRTeERRVmRTTEVWQlFVVXNRMEZMUVN4RFFVRkRMRUZLVkVZc1RVRkJUU3hGUjFCVUxFZEJRVWNzUjBOQlF5eE5RVUZOTEVOQlYxSXNSVUZCUlN4RFFVdEJMRU5CUVVNc1FVcFNSaXhOUVVGTkxFTkJRVU03UlVsbFJpeExRVUZMTEVWTWFFSkVMRTlCUVU4N1EwTkhhRUk3TzBGSmJVSkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEU5QlFVODdSVVEzUW5wRExFRkRORUpGTEVkRU5VSkRMRWREUVVNc1RVRkJUU3hEUVRSQ1VpeFJRVUZSTEVOQlFVTTdTVUZGVEN4UlFVRlJMRVZCUVVVc1MwRkJTenRKUVVObUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBsQlExZ3NUVUZCVFN4RlFVRkZMRXRCUVVzN1NVRkRZaXhQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEVkQlFVY3NSVUZCUlN4RFFVRkRPMGxCUTA0c1NVRkJTU3hGUVVGRkxFTkJRVU03U1VGRFVDeFZRVUZWTEVWTU9VSk9MSE5DUVVGUE8wbExLMEpZTEZOQlFWTXNSVUZCUlN4blFrRkJaMEk3U1VGRE0wSXNWVUZCVlN4RlFVRkZMRkZCUVZFN1NVRkRjRUlzVDBGQlR5eEZRVUZGTEVsQlFVazdTVUZEWWl4alFVRmpMRVZCUVVVc1RVRkJUVHRIUVhsQ2VrSTdPenRCUVhaQ1F5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkVNVU4yUXl4QlF6UkNSU3hIUkRWQ1F5eEhRMEZETEUxQlFVMHNRMEUwUWxJc1VVRkJVU3hEUVVGRE8wbEJaVXdzVTBGQlV5eEZRVUZGTEVOQlFVTTdTVUZEV2l4UFFVRlBMRVZCUVVVc1NVRkJTVHRKUVVOaUxHVkJRV1VzUlVGQlJTeFJRVUZSTzBsQlEzcENMRmRCUVZjc1JVRkJSU3hOUVVGTk8wZEJiVUowUWpzN08wRkVha1ZJTEVGRGFVUkpMRWRFYWtSRUxFZERRVU1zVFVGQlRTeERRVFJDVWl4UlFVRlJMRU5CY1VKT0xHVkJRV1VzUTBGQlF6dEZRVU5rTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRmRCUVZjc1JVRkJSU3hOUVVGTk8wVkJRMjVDTEdWQlFXVXNSVUZCUlN4TlFVRk5PMFZCUTNaQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRWRCUVVjc1JVRkJSU3hIUVVGSE8wVkJRMUlzUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4TFFVRkxMRVZNZGtSSUxFOUJRVTg3UlV0M1JGUXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkxhRUk3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZSRGRFZWtNc1FVTnBSRWtzUjBScVJFUXNSME5CUXl4TlFVRk5MRU5CTkVKU0xGRkJRVkVzUTBGeFFrNHNaVUZCWlN4RFFVRkRPMGxCWVZvc1QwRkJUeXhGUVVGRkxFbEJRVWs3UjBGRmFFSTdPenRCUkdoRlRDeEJRMjlGU1N4SFJIQkZSQ3hIUTBGRExFMUJRVTBzUTBGdFJWSXNXVUZCV1N4QlFVRkJMRkZCUVZFc1IwRkRhRUlzVVVGQlVTeERRVUZETzBWQlExUXNVMEZCVXl4RlFVRkZMR0ZCUVdFN1EwRkRla0k3TzBGRWRFVk1MRUZETUVWQkxFZEVNVVZITEVORE1FVklMRmxCUVZrc1EwRkJRenRGUVVOWUxGTkJRVk1zUlVGQlJTeERRVUZETzBOQk5FTmlPenRCUVRORFF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hQUVVGUE8wVkVOVVYyUXl4QlF6WkZTU3hIUkRkRlJDeERRekJGU0N4WlFVRlpMRWRCUjA0c1IwRkJSenRGUkRkRlZDeEhRVUZITEVORE1FVklMRmxCUVZrc1EwRkpVaXhGUVVGRkxFTkJRVU03U1VGRFJDeE5RVUZOTEVWQlFVVXNTVUZCU1R0SFFVTmlPenM3UVVSb1Jrd3NRVU50UmtVc1IwUnVSa01zUTBNd1JVZ3NXVUZCV1N4RFFWTldMRVZCUVVVc1EwRkJRenRGUVVORUxGTkJRVk1zUlVGQlJTeEpRVUZKTzBWQlEyWXNZMEZCWXl4RlFVRkZMRk5CUVZNN1JVRkRla0lzVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeGpRVUZqTEVWQlFVVXNUVUZCVFR0RlFVTjBRaXhsUVVGbExFVkJRVVVzVFVGQlRUdERRVk40UWpzN1FVRlFReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZFTTBaMlF5eEJRMjFHUlN4SFJHNUdReXhEUXpCRlNDeFpRVUZaTEVOQlUxWXNSVUZCUlN4RFFVRkRPMGxCVTBNc1kwRkJZeXhGUVVGRkxFZEJRVWM3U1VGRGJrSXNaVUZCWlN4RlFVRkZMRkZCUVZFN1NVRkRla0lzV1VGQldTeEZRVUZGTEUxQlFVMDdTVUZEY0VJc1UwRkJVeXhGUVVGRkxFbEJRVWs3U1VGRFppeFhRVUZYTEVWQlFVVXNTVUZCU1R0SFFVVndRanM3TzBGRWJFZElMRUZEYjBkRkxFZEVjRWRETEVORE1FVklMRmxCUVZrc1EwRXdRbFlzUTBGQlF5eERRVUZETzBWQlEwRXNUMEZCVHl4RlFVRkZMRXRCUVVzN1JVRkRaQ3hMUVVGTExFVk1ia2RFTEU5QlFVODdSVXR2UjFnc1QwRkJUeXhGUVVGRkxITkNRVUZ6UWp0RlFVTXZRaXhsUVVGbExFVkJRVVVzU1VGQlNUdERRV04wUWpzN1FVUjBTRWdzUVVoUFJTeEhSMUJETEVORE1FVklMRmxCUVZrc1EwRXdRbFlzUTBGQlF5eEJTamRHUVN4TlFVRk5MRVZIVUZRc1IwRkJSeXhEUXpCRlNDeFpRVUZaTEVOQk1FSldMRU5CUVVNc1FVbzFSa0VzVFVGQlRTeERRVUZETzBWSmJVZEtMRXRCUVVzc1JVeDRSMGdzZDBKQlFVODdRME5QV2pzN1FVbHZSME1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUkRsSGRrTXNRVU52UjBVc1IwUndSME1zUTBNd1JVZ3NXVUZCV1N4RFFUQkNWaXhEUVVGRExFTkJRVU03U1VGWFJTeExRVUZMTEVWTWVFZERMRTlCUVU4N1NVdDVSMklzVDBGQlR5eEZRVUZGTEhOQ1FVRnpRanRIUVUxc1F6dEZSSFJJU0N4QlNFOUZMRWRIVUVNc1EwTXdSVWdzV1VGQldTeERRVEJDVml4RFFVRkRMRUZLTjBaQkxFMUJRVTBzUlVkUVZDeEhRVUZITEVORE1FVklMRmxCUVZrc1EwRXdRbFlzUTBGQlF5eEJTalZHUVN4TlFVRk5MRU5CUVVNN1NVa3lSMFlzUzBGQlN5eEZURE5IU2l4UFFVRlBPMGREUldJN096dEJTV2RJUkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWRU1VaHlReXhCUTNsSVFTeEhSSHBJUnl4RFEzbElTQ3hsUVVGbExFTkJRVU03U1VGRldpeFBRVUZQTEVWQlFVVXNTVUZCU1R0SFFVVm9RanM3TzBGRU4waEVMRUZGUVVFc1IwWkJSeXhIUlVGRExFbEJRVWtzUTBGQlF6dEZRVU5RTEZOQlFWTXNSVUZCUlN4RFFVRkRPME5CUzJJN08wRkdUa1FzUVVWSFJTeEhSa2hETEVkRlFVTXNTVUZCU1N4SFFVZEtMRWRCUVVjc1EwRkJRenRGVEVaT0xGTkJRVk1zUlVSRVRDeE5RVUZOTzBWRFJWWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUTBGQlF5eERSRVpJTEVsQlFVazdRMDFKVmpzN1FVWk1TQ3hCUlZGQkxFZEdVa2NzUTBWUlNDeGhRVUZoTEVOQlFVTTdSVUZEV2l4TFFVRkxMRVZPUmtzc1QwRkJUenREVFcxQ2JFSTdPMEZCWmtNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlJsaHlReXhCUlZGQkxFZEdVa2NzUTBWUlNDeGhRVUZoTEVOQlFVTTdTVUZKVml4UFFVRlBMRVZCUVVVc1NVRkJTVHRIUVdOb1FqdEZSakZDUkN4QlJXVk5MRWRHWmtnc1EwVlJTQ3hoUVVGaExFZEJUVkFzUjBGQlJ5eEJRVU5HTEZsQlFWa3NRMEZCUXp0SlFVTmFMRXRCUVVzc1JVRkJSU3hIUVVGSE8wbEJRMVlzU1VGQlNTeEZRVUZGTEU5QlFVODdTVUZEWWl4aFFVRmhMRVZCUVVVc1NVRkJWenRIUVVNelFqdEZSbTVDVUN4QlJXOUNUU3hIUm5CQ1NDeERSVkZJTEdGQlFXRXNSMEZOVUN4SFFVRkhMRUZCVFVZc1YwRkJWeXhEUVVGRE8wbEJRMWdzVTBGQlV5eEZRVUZGTEVOQlFVTTdTVUZEV2l4WlFVRlpMRVZCUVVVc1NVRkJWenRIUVVNeFFqczdPMEZHZGtKUUxFRkhRVUVzUjBoQlJ5eEhSMEZETEUxQlFVMHNRMEZCUXp0RlFVTlVMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzUzBGQlN5eEZVRWxITEU5QlFVODdSVTlJWml4UFFVRlBMRVZCUVVVc1RVRkJUVHREUVdkRWFFSTdPMEZCT1VORExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVaE1ja01zUVVkQlFTeEhTRUZITEVkSFFVTXNUVUZCVFN4RFFVRkRPMGxCVFZBc1UwRkJVeXhGUVVGRkxFbEJRVWs3UjBFMlEyeENPenM3UVVodVJFUXNRVWRUUlN4SFNGUkRMRWRIUVVNc1RVRkJUU3hEUVZOU0xHRkJRV0VzUTBGQlF6dEZRVU5hTEZkQlFWY3NSVUZCUlN4SlFVRkpPME5CUTJ4Q096dEJTRmhJTEVGSFlVVXNSMGhpUXl4SFIwRkRMRTFCUVUwc1EwRmhVaXhEUVVGRExFTkJRVU03UlVGRFFTeExRVUZMTEVWUVVrTXNUMEZCVHp0RlQxTmlMR1ZCUVdVc1JVRkJSU3hKUVVGSk8wTkJTM1JDT3p0QlNIQkNTQ3hCU0U5RkxFZEhVRU1zUjBkQlF5eE5RVUZOTEVOQllWSXNRMEZCUXl4QlRrNUJMRTFCUVUwc1JVZFFWQ3hIUVVGSExFZEhRVU1zVFVGQlRTeERRV0ZTTEVOQlFVTXNRVTVNUVN4TlFVRk5MRU5CUVVNN1JVMVZTaXhMUVVGTExFVlFWa1lzVDBGQlR6dERRMFZpT3p0QlIxWklMRUZIYzBKRkxFZElkRUpETEVkSFFVTXNUVUZCVFN4SFFYTkNUaXhIUVVGSExFTkJRVU03UlU1eVFrNHNVMEZCVXl4RlJFUk1MRTFCUVUwN1JVTkZWaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEU5QlFVOHNSVUZCUlN4RFFVRkRMRU5FUmtnc1NVRkJTVHREVHl0Q1ZqczdRVUZPUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWSU1VSXhReXhCUjNsQ1NTeEhTSHBDUkN4SFIwRkRMRTFCUVUwc1IwRnpRazRzUjBGQlJ5eEhRVWRFTEVkQlFVY3NRMEZCUXp0SlFVVkdMRTlCUVU4c1JVRkJSU3hKUVVGSk8wbEJRMklzWlVGQlpTeEZRVUZGTEdGQlFXRTdTVUZET1VJc1YwRkJWeXhGUVVGRkxFMUJRVTA3UjBGRmRFSTdPenRCU0M5Q1RDeEJSMnREUlN4SFNHeERReXhIUjBGRExFMUJRVTBzUTBGclExSXNSVUZCUlN4RFFVRkRPMFZCUTBRc1lVRkJZU3hGUVVGRkxFZEJRVWM3UTBGbGJrSTdPMEZJYkVSSUxFRkhiME5KTEVkSWNFTkVMRWRIUVVNc1RVRkJUU3hEUVd0RFVpeEZRVUZGTEVOQlJVRXNSVUZCUlN4RFFVRkRPMFZCUTBRc1YwRkJWeXhGUVVGRkxFdEJRVXM3UTBGRGJrSTdPMEZCUTBRc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlNIWkRka01zUVVkclEwVXNSMGhzUTBNc1IwZEJReXhOUVVGTkxFTkJhME5TTEVWQlFVVXNRMEZCUXp0SlFVMURMRTFCUVUwc1JVRkJSU3hEUVVGRE8wbEJRMVFzVDBGQlR5eEZRVUZGTEVsQlFVazdSMEZUYUVJN1JVaHNSRWdzUVVjeVExVXNSMGd6UTFBc1IwZEJReXhOUVVGTkxFTkJhME5TTEVWQlFVVXNRMEZSU1N4RlFVRkZMRWRCUTBVc1JVRkJSU3hCUVVGQkxFOUJRVThzUTBGQlF6dEpRVU5XTEU5QlFVOHNSVUZCUlN4WlFVRlpPMGxCUTNKQ0xFOUJRVThzUlVGQlJTeEhRVUZITzBsQlExb3NUMEZCVHl4RlFVRkZMRXRCUVVzN1IwRkRaanM3TzBGRE0wTllMRUZCUTBVc1kwRkVXU3hEUVVOYUxFdEJRVXNzUTBGQlF6dEZRVU5LTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1pVRkJaU3hGUVVGRkxGRkJRVkU3UlVGRGVrSXNWVUZCVlN4RlFVRkZMRWxCUVVrN1EwRkRha0k3TzBGQlRFZ3NRVUZQUlN4alFWQlpMRU5CVDFvc1MwRkJTeXhEUVVGRE8wVkJRMG9zWVVGQllTeEZRVUZGTEVkQlFVY3NRMEZCUXl4TFFVRkxMRU5TVG14Q0xFOUJRVTg3UTFGUFpEczdRVUZVU0N4QlFWZEZMR05CV0Zrc1EwRlhXaXhGUVVGRkxFTkJRVU03UlVGRFJDeFZRVUZWTEVWQlFVVXNTVUZCU1R0RlFVTm9RaXhUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEdOQlFXTXNSVUZCUlN4VFFVRlRPMFZCUTNwQ0xGZEJRVmNzUlVGQlJTeEpRVUZKTzBWQlEycENMRTlCUVU4c1JVRkJSU3hMUVVGTE8wVkJRMlFzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1ZVRkJWU3hGUVVGRkxGRkJRVkU3UlVGRGNFSXNUVUZCVFN4RlFVRkZMRTlCUVU4N1EwRXlRMmhDT3p0QlFUbEVTQ3hCVUVkRkxHTlBTRmtzUTBGWFdpeEZRVUZGTEVGUVVrUXNUVUZCVFN4RlQwaFVMR05CUVdNc1EwRlhXaXhGUVVGRkxFRlFVRVFzVFVGQlRTeERRVUZETzBWUGEwSktMRXRCUVVzc1JWSnNRa1lzVDBGQlR6dEZVVzFDVml4UFFVRlBMRVZCUVVVc1EwRkJRenREVUdwQ1lqczdRVTlPU0N4QlFYbENUU3hqUVhwQ1VTeERRVmRhTEVWQlFVVXNRVkJTUkN4TlFVRk5MRU5QYzBKSUxFZEJRVWNzUVVGQlFTeE5RVUZOTEVWQmVrSm1MR05CUVdNc1EwRlhXaXhGUVVGRkxFRlFVRVFzVFVGQlRTeERUM0ZDU0N4SFFVRkhMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRMUlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEV0RzN1FVRXpRbEFzUVVFNFFra3NZMEU1UWxVc1EwRlhXaXhGUVVGRkxFTkJiVUpCTEVkQlFVY3NRMEZCUXp0RlFVTkdMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzWlVGQlpTeEZRVUZGTEdGQlFXRTdSVUZET1VJc1YwRkJWeXhGUVVGRkxFMUJRVTA3UlVGRGJrSXNZVUZCWVN4RlVuSkRWaXhKUVVGSk8wTlJhMFJTT3p0QlFTOURUQ3hCUVc5RFRTeGpRWEJEVVN4RFFWZGFMRVZCUVVVc1EwRnRRa0VzUjBGQlJ5eEJRVTFCTEUxQlFVMHNRMEZCUXp0RlFVTk9MRXRCUVVzc1JVRkJSU3hEUVVGRE8wVkJRMUlzVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4WlFVRlpMRVZCUVVVc1MwRkJTenRGUVVOdVFpeFpRVUZaTEVWQlFVVXNZVUZCWVR0RlFVTXpRaXhaUVVGWkxFVkJRVVVzVjBGQlZ5eERRVUZETEZkQlFWY3NRMUoyUTI1RExFOUJRVThzUTFGMVEzTkRMRmRCUVZjN1JVRkRNVVFzVDBGQlR5eEZRVUZGTEVWQlFVVTdSVUZEV0N4UFFVRlBMRVZCUVVVc1JVRkJSVHRGUVVOWUxGVkJRVlVzUlVGQlJTeFJRVUZSTzBWQlEzQkNMRk5CUVZNc1JVRkJSU3hqUVVGak8wTkJRekZDT3p0QlFUbERVQ3hCUVdsRVNTeGpRV3BFVlN4RFFWZGFMRVZCUVVVc1EwRnpRME1zUVVGQlFTeFRRVUZETEVOQlFWVXNWMEZCVnl4QlFVRnlRaXhIUVdwRVRpeGpRVUZqTEVOQlYxb3NSVUZCUlN4RFFYVkRReXhCUVVGQkxGTkJRVU1zUTBGQlZTeFpRVUZaTEVGQlFYUkNMRVZCUVhkQ08wVkJRM2hDTEV0QlFVc3NSVkl2UTBZc1QwRkJUenREVVcxRVdEczdRVUYyUkV3c1FVRnZSRTBzWTBGd1JGRXNRMEZYV2l4RlFVRkZMRU5CYzBORExFRkJRVUVzVTBGQlF5eERRVUZWTEZkQlFWY3NRVUZCY2tJc1JVRkhRU3hIUVVGSExFRkJRVUVzVFVGQlRTeEZRWEJFWml4alFVRmpMRU5CVjFvc1JVRkJSU3hEUVhWRFF5eEJRVUZCTEZOQlFVTXNRMEZCVlN4WlFVRlpMRUZCUVhSQ0xFVkJSVUVzUjBGQlJ5eEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTlNMRTlCUVU4c1JVRkJSU3hEUVVGRE8wTkJRMWc3TzBGQmRFUlFMRUZCTUVSTkxHTkJNVVJSTEVOQlYxb3NSVUZCUlN4RFFUaERReXhCUVVGQkxGTkJRVU1zUTBGQlZTeFpRVUZaTEVGQlFYUkNMRVZCUTBFc1IwRkJSeXhCUVVGQkxFMUJRVTBzUTBGQlF6dEZRVU5TTEZOQlFWTXNSVUZCUlN4VFFVRlRPME5CUTNKQ096dEJRVFZFVUN4QlFXZEZSU3hqUVdoRldTeERRV2RGV2l4RlFVRkZMRU5CUVVNN1JVRkRSQ3hQUVVGUExFVkJRVVVzUzBGQlN6dERRVk5tT3p0QlFURkZTQ3hCUVd0RlNTeGpRV3hGVlN4RFFXZEZXaXhGUVVGRk8wRkJhRVZLTEdOQlFXTXNRMEZuUlZvc1JVRkJSU3hEUVVkQkxFVkJRVVVzUTBGQlF6dEZRVU5FTEZOQlFWTXNSVUZCUlN4SlFVRkpPME5CUTJoQ096dEJRWEpGVEN4QlFYVkZTU3hqUVhaRlZTeERRV2RGV2l4RlFVRkZMRU5CVDBFc1JVRkJSU3hEUVVGRE8wVkJRMFFzVFVGQlRTeEZRVUZGTEVOQlFVTTdRMEZEVmpzN1FVRjZSVXdzUVVFMFJVVXNZMEUxUlZrc1EwRTBSVm9zUTBGQlF5eERRVUZETzBWQlEwRXNTMEZCU3l4RlVqTkZReXhQUVVGUE8wVlJORVZpTEdWQlFXVXNSVUZCUlN4SlFVRkpPME5CVDNSQ096dEJRWEpHU0N4QlVFZEZMR05QU0Zrc1EwRTBSVm9zUTBGQlF5eEJVSHBGUVN4TlFVRk5MRVZQU0ZRc1kwRkJZeXhEUVRSRldpeERRVUZETEVGUWVFVkJMRTFCUVUwc1EwRkJRenRGVHpaRlNpeExRVUZMTEVWU04wVkdMRTlCUVU4N1JWRTRSVllzWlVGQlpTeEZRVUZGTEZOQlFWTTdSVUZETVVJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTFBM1JXaENPenRCVDJ0R1NDeEJRVU5GTEdWQlJHRXNRMEZEWWl4SFFVRkhMRU5CUVVNN1JVRkRSaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFdEJRVXM3UTBGRFpqczdRVUZNU0N4QlFVOUZMR1ZCVUdFc1EwRlBZaXhOUVVGTkxFTkJRVU03UlVGRFRDeGpRVUZqTEVWQlFVVXNTVUZCU1R0RFFVTnlRanM3UVVGVVNDeEJRVmRGTEdWQldHRXNRMEZYWWl4VlFVRlZMRU5CUVVNN1JVRkRWQ3hUUVVGVExFVkJRVVVzUjBGQlJ6dEZRVU5rTEZkQlFWY3NSVUZCUlN4VFFVRmpPMFZCUXpOQ0xGVkJRVlVzUlVGQlJTeEhRVUZITzBWQlEyWXNTMEZCU3l4RlVuQkhSeXhQUVVGUE8wTlJjVWRvUWpzN1FVRkZSQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYkVKeVF5eEJRVUZCTEdWQlFXVXNRMEZCUXp0SlFXMUNXaXhQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEZOQlFWTXNSVUZCUlN4UlFVRlJPMGxCUTI1Q0xFMUJRVTBzUlVGQlJTeExRVUZuUWp0SFFWY3pRanRGUVdoRFJDeEJRWFZDU1N4bFFYWkNWeXhEUVhWQ1dDeE5RVUZOTEVOQlFVTTdTVUZEVEN4TFFVRkxMRVZCUVVVc1IwRkJSenRKUVVOV0xFOUJRVThzUlVGQlJTeEpRVUZYTzBkQlMzSkNPMFZCT1VKTUxFRkJNa0pOTEdWQk0wSlRMRU5CZFVKWUxFMUJRVTBzUVVGSlNDeFpRVUZaTEVOQlFVTTdTVUZEV2l4TFFVRkxMRVZCUVVVc1NVRkJTVHRIUVVOYU96czdRVUZOVUN4QlFVOUpMR1ZCVUZjc1EwRk5ZaXhKUVVGSkxFTkJRMFlzUjBGQlJ5eERRVUZETzBWQlEwWXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhsUVVGbExFVkJRVVVzWVVGQllUdEZRVU01UWl4VFFVRlRMRVZCUVVVc1NVRkJTVHREUVhGQ2FFSTdPMEZCTDBKTUxFRkJXVTBzWlVGYVV5eERRVTFpTEVsQlFVa3NRMEZEUml4SFFVRkhMRU5CUzBRc1EwRkJReXhEUVVGRE8wVkJRMEVzUzBGQlN5eEZVbkpKUkN4UFFVRlBPMFZSYzBsWUxHVkJRV1VzUlVGQlJTeEpRVUZKTzBOQlRYUkNPenRCUVhCQ1VDeEJVSGhJUlN4bFQzZElZU3hEUVUxaUxFbEJRVWtzUTBGRFJpeEhRVUZITEVOQlMwUXNRMEZCUXl4QlVIQkpTaXhOUVVGTkxFVlBkMGhVTEdWQlFXVXNRMEZOWWl4SlFVRkpMRU5CUTBZc1IwRkJSeXhEUVV0RUxFTkJRVU1zUVZCdVNVb3NUVUZCVFN4RFFVRkRPMFZQZDBsQkxFdEJRVXNzUlZKNFNVNHNUMEZCVHp0RlVYbEpUaXhsUVVGbExFVkJRVVVzVTBGQlV6dERVSFpKYWtNN08wRlBNa2xITEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGMFFucERMRUZCZFVKUkxHVkJka0pQTEVOQlRXSXNTVUZCU1N4RFFVTkdMRWRCUVVjc1EwRm5Ra01zV1VGQldTeERRVUZETzBsQlExZ3NVMEZCVXl4RlFVRkZMR2xDUVVGcFFqdEhRVU0zUWp0RlFYcENWQ3hCUVRKQ1VTeGxRVE5DVHl4RFFVMWlMRWxCUVVrc1EwRkRSaXhIUVVGSExFTkJiMEpETEZkQlFWY3NRMEZCUXp0SlFVTldMRk5CUVZNc1JVRkJSU3huUWtGQlowSTdSMEZETlVJN096dEJRVTlJTEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGd1F6RkRMRUZCYlVOSkxHVkJia05YTEVOQmEwTmlMR0ZCUVdFc1IwRkRWQ3hIUVVGSExFRkJRVUVzVjBGQlZ5eERRVUZETzBsQlJXSXNTMEZCU3l4RlFVRkZMRWRCUVVjN1NVRkRWaXhUUVVGVExFVkJRVVVzUTBGQlF6dEhRVVZtT3pzN1FVRkpUQ3hCUVVWSkxHZENRVVpaTEVOQlEyUXNTVUZCU1N4RFFVTkdMRWRCUVVjc1EwRkJRenRGUVVOR0xGTkJRVk1zUlVGQlJTeEpRVUZKTzBOQmVVSm9RanM3UVVFMVFrd3NRVUZMVFN4blFrRk1WU3hEUVVOa0xFbEJRVWtzUTBGRFJpeEhRVUZITEVOQlIwUXNSVUZCUlN4RFFVRkRPMFZCUTBRc1lVRkJZU3hGUVVGRkxFbEJRVWs3UTBGTGNFSTdPMEZCV0ZBc1FVRlJVU3huUWtGU1VTeERRVU5rTEVsQlFVa3NRMEZEUml4SFFVRkhMRU5CUjBRc1JVRkJSU3hCUVVkRExGZEJRVmNzUTBGQlF6dEZRVU5ZTEZWQlFWVXNSVUZCUlN4SFFVRkhPME5CUTJoQ096dEJRVlpVTEVGQllVMHNaMEpCWWxVc1EwRkRaQ3hKUVVGSkxFTkJRMFlzUjBGQlJ5eERRVmRFTEVOQlFVTXNRMEZCUXp0RlFVTkJMRXRCUVVzc1JWSnNURVFzVDBGQlR6dERVU3RNV2pzN1FVRXpRbEFzUVZCd1MwVXNaMEpQYjB0akxFTkJRMlFzU1VGQlNTeERRVU5HTEVkQlFVY3NRMEZYUkN4RFFVRkRMRUZRYWt4S0xFMUJRVTBzUlU5dlMxUXNaMEpCUVdkQ0xFTkJRMlFzU1VGQlNTeERRVU5HTEVkQlFVY3NRMEZYUkN4RFFVRkRMRUZRYUV4S0xFMUJRVTBzUTBGQlF6dEZUMjlNUVN4TFFVRkxMRVZTY0V4T0xFOUJRVTg3UTBORllqczdRVTlwUzBnc1FVRnZRbEVzWjBKQmNFSlJMRU5CUTJRc1NVRkJTU3hEUVVOR0xFZEJRVWNzUTBGWFJDeERRVUZETEVGQlQwVXNUMEZCVHl4RFFVRkRPMFZCUTFBc1MwRkJTeXhGVW5oTVRpeFBRVUZQTzBWUmVVeE9MRmRCUVZjc1JVRkJSU3hKUVVGSk8wTkJTV3hDT3p0QlEzSk5WQ3hCUVVGQkxHRkJRV0VzUTBGQlF6dEZRVU5hTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1lVRkJZU3hGUVVGRkxFZEJRVWM3UTBGaGJrSTdPMEZCWmtRc1FVRkpSU3hoUVVwWExFTkJTVmdzUTBGQlF5eERRVUZETzBWQlEwRXNTMEZCU3l4RlZFVkhMRTlCUVU4N1ExTkhhRUk3TzBGQlZrZ3NRVkpQUlN4aFVWQlhMRU5CU1Znc1EwRkJReXhCVWtkQkxFMUJRVTBzUlZGUVZDeGhRVUZoTEVOQlNWZ3NRMEZCUXl4QlVrbEJMRTFCUVUwc1EwRkJRenRGVVVGS0xFdEJRVXNzUlZSQlJpeFBRVUZQTzBORFJXSTdPMEZSVmtnc1FVRlpSU3hoUVZwWExFTkJXVmdzUlVGQlJTeEJRVUZCTEZGQlFWRXNRMEZCUXp0RlFVTlVMR0ZCUVdFc1JVRkJSU3hIUVVGSE8wTkJRMjVDT3p0QlFVbElMRUZCUTBVc1VVRkVUU3hEUVVOT0xFMUJRVTBzUTBGQlF6dEZRVU5NTEV0QlFVc3NSVUZCUlN4SlFVRkpPME5CUTFvN08wRkRjRUpFTEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGRWNrTXNRVUZCUVN4UlFVRlJMRU5CUVVNN1NVRkZUQ3hQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEhGQ1FVRnhRaXhGUVVGRkxGZEJRVmM3U1VGRGJFTXNZMEZCWXl4RlFVRkZMRWRCUVVjN1NVRkRia0lzWTBGQll5eEZRVUZGTEV0QlFVczdTVUZEY2tJc1VVRkJVU3hGUVVGRkxFbEJRVmM3UjBFeVEzaENPenM3UVVGcVJFUXNRVUZUUlN4UlFWUk5MRWRCVTBvc1IwRkJSeXhEUVVGRE8wVkJRMG9zWVVGQllTeEZRVUZGTEVsQlFWYzdRMEZMTTBJN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVZwMlF5eEJRVk5GTEZGQlZFMHNSMEZUU2l4SFFVRkhMRU5CUVVNN1NVRkpSaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEhRVVZhT3pzN1FVRkZSQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCYWtKMFF5eEJRVUZCTEZGQlFWRXNRMEZCUXp0SlFXdENUQ3h4UWtGQmNVSXNSVUZCUlN4bFFVRmxPMGRCSzBKNlF6czdPMEZCYWtSRUxFRkJjVUpGTEZGQmNrSk5MRWRCY1VKS0xFZEJRVWNzUTBGQlF6dEZRVU5LTEdWQlFXVXNSVUZCUlN4TlFVRk5PME5CUTNoQ096dEJRWFpDU0N4QlFYbENSU3hSUVhwQ1RTeEhRWGxDU2l4SFFVRkhMRU5CUVVNN1JVRkRTaXhaUVVGWkxFVkJRVVVzVFVGQlRUdERRVU55UWpzN1FVRXpRa2dzUVVFMlFrVXNVVUUzUWswc1EwRTJRazRzUjBGQlJ5eERRVUZETzBWQlEwWXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEU5QlFVOHNSVUZCUlN4TFFVRkxPMFZCUTJRc1ZVRkJWU3hGUVVGRkxFdEJRVXM3UlVGRGFrSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4VlFVRlZMRVZCUVVVc1VVRkJVVHREUVVOeVFqczdRVUZ5UTBnc1FVRjFRMFVzVVVGMlEwMHNRMEYxUTA0c1UwRkJVeXhEUVVGRE8wVkJRMUlzVlVGQlZTeEZWaTlDVGl4UFFVRlBPMFZWWjBOWUxFdEJRVXNzUlZaMFEwUXNUMEZCVHp0RlZYVkRXQ3hUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEU5QlFVOHNSVUZCUlN4SlFVRlhPME5CUzNKQ096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVFM1EzaERMRUZCZFVORkxGRkJka05OTEVOQmRVTk9MRk5CUVZNc1EwRkJRenRKUVU5T0xGTkJRVk1zUlVGQlJTeEpRVUZKTzBkQlJXeENPenM3UVVGSFNDeEJRVUZCTEZWQlFWVXNRMEZCUXp0RlFVTlVMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEZWQlFWVXNSVll2UTBZc1QwRkJUenREVldsSWFFSTdPMEZCY0VWRUxFRkJTVVVzVlVGS1VTeEhRVWxPTEVkQlFVY3NRMEZCUXp0RlFVTktMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeExRVUZMTEVWV2VFUkVMRTlCUVU4N1JWVjVSRmdzWTBGQll5eEZRVUZGTEZOQlFWTTdSVUZEZWtJc1YwRkJWeXhGUVVGRkxFbEJRVWs3UlVGRGFrSXNWMEZCVnl4RlFVRkZMRWRCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eERWakZFY0VJc1QwRkJUenRGVlRKRVdDeFZRVUZWTEVWQlFVVXNVVUZCVVR0RFFVMXlRanM3UVVGSVF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJablpETEVGQlNVVXNWVUZLVVN4SFFVbE9MRWRCUVVjc1EwRkJRenRKUVZsR0xGTkJRVk1zUlVGQlJTeEpRVUZKTzBkQlJXeENPenM3UVVGc1FrZ3NRVUZ4UWtrc1ZVRnlRazBzUVZRMVExQXNUVUZCVFN4RFUybEZUQ3hIUVVGSExFVkJja0pRTEZWQlFWVXNRVlF6UTFBc1RVRkJUU3hEVTJkRlRDeEhRVUZITEVOQlFVTTdSVUZEUml4UFFVRlBMRVZCUVVVc1JVRkJSVHREUVVOYU96dEJRVTFJTEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFM1FuSkRMRUZCSzBKTkxGVkJMMEpKTEVGQk9FSk1MRWRCUVVjc1IwRkRRU3hIUVVGSExFTkJRVU03U1VGRFNpeEhRVUZITEVWQlFVVXNSMEZCVnp0SlFVTm9RaXhKUVVGSkxFVkJRVVVzUjBGQlZ6dEpRVU5xUWl4blFrRkJaMElzUlVGQlJTeFhRVUZYTzBkQlF6bENPMFZCYmtOUUxFRkJkVU5OTEZWQmRrTkpMRUZCYzBOTUxFZEJRVWNzUjBGRFFTeEhRVUZITEVOQlFVTTdTVUZEU2l4TlFVRk5MRVZCUVVVc1IwRkJWenRKUVVOdVFpeEpRVUZKTEVWQlFVVXNSMEZCVnp0SlFVTnFRaXhuUWtGQlowSXNSVUZCUlN4WFFVRlhPMGRCUXpsQ08wVkJNME5RTEVGQkswTk5MRlZCTDBOSkxFRkJPRU5NTEVkQlFVY3NSMEZEUVN4SFFVRkhMRU5CUVVNN1NVRkRTaXhIUVVGSExFVkJRVVVzUjBGQlZ6dEpRVU5vUWl4TFFVRkxMRVZCUVVVc1IwRkJWenRKUVVOc1FpeG5Ra0ZCWjBJc1JVRkJSU3haUVVGWk8wZEJReTlDTzBWQmJrUlFMRUZCZFVSTkxGVkJka1JKTEVGQmMwUk1MRWRCUVVjc1IwRkRRU3hIUVVGSExFTkJRVU03U1VGRFNpeE5RVUZOTEVWQlFVVXNSMEZCVnp0SlFVTnVRaXhMUVVGTExFVkJRVVVzUjBGQlZ6dEpRVU5zUWl4blFrRkJaMElzUlVGQlJTeFpRVUZaTzBkQlF5OUNPenM3UVVVNVIxQXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRUaXhMUVVGTExFVkJRVVVzUzBGQlN6dEZRVU5hTEUxQlFVMHNSVUZCUlN4TFFVRkxPMFZCUTJJc1VVRkJVU3hGUVVGRkxFdEJRVXM3UlVGRFppeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTk9MRWxCUVVrc1JVRkJSU3hEUVVGRE8wVkJRMUFzWTBGQll5eEZRVUZGTEVsQlFVazdSVUZGY0VJc1VVRkJVU3hGUVVGRkxFbEJRVWs3UlVGRFpDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRTlCUVU4c1JVRkJSU3hKUVVGSk8wTkJTMlE3TzBGQlNFTXNRVUZCUVN4WlFVRlpMRU5CV21Rc1QwRkJUeXhEUVZsVk8wVkJRMklzVDBGQlR5eEZRVUZGTEV0QlFVczdRMEZEWmlKOSAqL1xuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAubGlzdGluZy1ncmlkIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgICAgICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgIG1hcmdpbjogLTIwcHggLyAyO1xuICB9XG5cbiAgLmxpc3RpbmctZ3JpZCBhcnRpY2xlIHtcbiAgICB3aWR0aDogNTAlO1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgICAgIC1tcy1mbGV4OiAwIDAgNTAlO1xuICAgICAgICAgICAgZmxleDogMCAwIDUwJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9XG5cbiAgLmN3ID4gaGVhZGVyIC5vdmVybGF5IHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAgICAgICAtbXMtZmxleC1wb3NpdGl2ZTogMTtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuXG4gIC5jdyA+IGhlYWRlciAub3ZlcmxheSAudG9nZ2xlLXRyaWdnZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAuY3cgLm5hdi1wcmltYXJ5IHVsIHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IGhvcml6b250YWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNy41cHg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgLmN3IC5uYXYtcHJpbWFyeSBhIHtcbiAgICBjb2xvcjogIzYzNjU2OTtcbiAgICBwYWRkaW5nOiAxMXB4IDcuNXB4IDE4cHggMTcuNXB4O1xuICB9XG5cbiAgLmN3IC5uYXYtcHJpbWFyeSBhOmhvdmVyLFxuICAuY3cgLm5hdi1wcmltYXJ5IGE6Zm9jdXMge1xuICAgIGNvbG9yOiAjRkYyMDIwO1xuICB9XG5cbiAgLmN3IC50b2dnbGUtdHJpZ2dlciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5jdyAubWFpbi1jb250ZW50IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgLmN3IC5tYWluLWNvbnRlbnQgPiBkaXY6Zmlyc3QtY2hpbGQge1xuICAgIHdpZHRoOiAyNSU7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgICAgLW1zLWZsZXg6IDAgMCAyNSU7XG4gICAgICAgICAgICBmbGV4OiAwIDAgMjUlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIH1cblxuICAuY3cgLm1haW4tY29udGVudCA+IGRpdjpsYXN0LWNoaWxkIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAgICAgICAtbXMtZmxleC1wb3NpdGl2ZTogMTtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIH1cblxuICAuY3cgPiBmb290ZXIge1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgfVxuXG4gIC5jdyA+IGZvb3RlciB1bCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cblxuICAuY3cgPiBmb290ZXIgdWwgbGkgKyBsaTpiZWZvcmUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBjb250ZW50OiBcInxcIjtcbiAgICBwYWRkaW5nOiAwIDhweDtcbiAgfVxuXG4gIC5wcm9qZWN0LWltYWdlcyB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IGhvcml6b250YWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgICAgICAgICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICBtYXJnaW46IC0xMHB4O1xuICB9XG5cbiAgLnByb2plY3QtaW1hZ2VzIGZpZ3VyZSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9XG5cbiAgLnByb2plY3QtaW1hZ2VzIGZpZ3VyZTpmaXJzdC1jaGlsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAucHJvamVjdC1kZXRhaWwgbWFpbiBuYXYgOmZpcnN0LWNoaWxkIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTRweCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE0cHgpO1xuICB9XG5cbiAgLnByb2plY3QtZGV0YWlsIG1haW4gbmF2IDpsYXN0LWNoaWxkIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHB4KTtcbiAgfVxuXG4gIC5ocC1ncmlkIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XG4gICAgZ3JpZC1hdXRvLXJvd3M6IDFmcjtcbiAgICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XG4gICAgZ3JpZC1nYXA6IDEwcHg7XG4gIH1cblxuICAuaHAtZ3JpZCA+IGRpdiB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG5cbiAgLm1lbnUtbGluayA+IGRpdiB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICB9XG5cbiAgLm1lbnUtbGluay50bCA+IGRpdiB7XG4gICAgdG9wOiA1cHg7XG4gICAgbGVmdDogNXB4O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcbiAgfVxuXG4gIC5tZW51LWxpbmsuYmwgPiBkaXYge1xuICAgIGJvdHRvbTogNXB4O1xuICAgIGxlZnQ6IDVweDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gIH1cblxuICAubWVudS1saW5rLnRyID4gZGl2IHtcbiAgICB0b3A6IDVweDtcbiAgICByaWdodDogNXB4O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICB9XG5cbiAgLm1lbnUtbGluay5iciA+IGRpdiB7XG4gICAgYm90dG9tOiA1cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjtcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmxpc3RpbmctZ3JpZCBhcnRpY2xlIHtcbiAgICB3aWR0aDogMzMuMyU7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAgICAgLW1zLWZsZXg6IDAgMCAzMy4zJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAzMy4zJTtcbiAgfVxuXG4gIC5jdyA+IGZvb3RlciA+IGRpdiA+IGRpdiB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbiAgLnByb2plY3QtZGV0YWlsIC5tYWluLWNvbnRlbnQgPiBkaXY6bGFzdC1jaGlsZCB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgICAgICAtbXMtZmxleC1wb3NpdGl2ZTogMDtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMDtcbiAgfVxuXG4gIC5ocC1ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyIDFmcjtcbiAgfVxuXG4gIC5ocC1ncmlkIC5ocC1ibHVyYiB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2Ny45cHgpIHtcbiAgLmN3ID4gaGVhZGVyIC5vdmVybGF5IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICB6LWluZGV4OiA5MDAwO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMzIsIDMyLCAzMiwgMC45NSk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG4gIC5jdyAubmF2LXByaW1hcnkgPiBkaXYsXG4gIC5jdyAubmF2LXByaW1hcnkgdWwge1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxufSIsIkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogXCJybWEtaWNvbnNcIjtcblx0c3JjOiB1cmwoJy4uL2ZvbnRzL3JtYS1pY29ucy5lb3QnKTtcblx0c3JjOiB1cmwoJy4uL2ZvbnRzL3JtYS1pY29ucy5lb3Q/I2llZml4JykgZm9ybWF0KCdlb3QnKSxcblx0XHR1cmwoJy4uL2ZvbnRzL3JtYS1pY29ucy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcblx0XHR1cmwoJy4uL2ZvbnRzL3JtYS1pY29ucy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG5cdFx0dXJsKCcuLi9mb250cy9ybWEtaWNvbnMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxuXHRcdHVybCgnLi4vZm9udHMvcm1hLWljb25zLnN2ZyNybWEtaWNvbnMnKSBmb3JtYXQoJ3N2ZycpO1xufVxuXG4uaWM6YmVmb3JlIHtcblx0Zm9udC1mYW1pbHk6IFwicm1hLWljb25zXCI7XG5cdFx0LXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG5cdFx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xuXHRmb250LXZhcmlhbnQ6IG5vcm1hbDtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0Lyogc3BlYWs6IG5vbmU7IG9ubHkgbmVjZXNzYXJ5IGlmIG5vdCB1c2luZyB0aGUgcHJpdmF0ZSB1bmljb2RlIHJhbmdlIChmaXJzdEdseXBoIG9wdGlvbikgKi9cblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHR0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuXG4uaWMtYmFyczpiZWZvcmUge1xuXHRjb250ZW50OiBcIlxcRTAwMVwiO1xufVxuXG4uaWMtY2xvc2U6YmVmb3JlIHtcblx0Y29udGVudDogXCJcXEUwMDJcIjtcbn1cbiIsIioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIHNhbnMtc2VyaWY7XG59XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5hIHtcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG59XG5cbi5zci1vbmx5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsMCwwLDApO1xuICBib3JkZXI6IDA7XG59XG4iLCJoMSwgLmgxIHtcblxufVxuXG5oMiwgLmgyIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWFyZ2luOiAxZW0gMDtcblxuICB+IGgyLFxuICB+IC5oMiB7XG4gICAgbWFyZ2luLXRvcDogM2VtO1xuICB9XG5cbiAgc21hbGwge1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICB9XG59XG5cbmgxLCAuaDEge1xuXG59XG5cbmgxLCAuaDEge1xuXG59XG5cbmgxLCAuaDEge1xuXG59XG5cbmgxLCAuaDEge1xuXG59XG5cbnAge1xuICBmb250LXNpemU6IDExcHg7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjRlbTtcbn1cbiIsIi5saXN0aW5nLWdyaWQge1xuICBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMDtcbiAgfVxuXG4gIGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtc2hhZG93OiAwcHggMHB4IDJweCAkYmxhY2s7XG4gICAgYmFja2dyb3VuZDogJGdyYXkxO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgaW1nIHtcbiAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaDIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgei1pbmRleDogMTtcbiAgICBwYWRkaW5nOiAkZ3V0dGVyIC8gMjtcbiAgfVxuXG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICBtYXJnaW46IC0jeyRndXR0ZXJ9IC8gMjtcblxuICAgIGFydGljbGUge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZsZXg6IDAgMCA1MCU7XG4gICAgICBwYWRkaW5nOiAkZ3V0dGVyIC8gMjtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgYXJ0aWNsZSB7XG4gICAgICB3aWR0aDogMzMuMyU7XG4gICAgICBmbGV4OiAwIDAgMzMuMyU7XG4gICAgfVxuICB9XG59XG4iLCIkbXhXOiAxMjQwcHg7XG4kZ3V0dGVyOiAyMHB4O1xuXG4kd2hpdGU6ICNGRkZGRkY7XG4kYmxhY2s6ICMxMTExMTE7XG5cbiRwcmltYXJ5OiAjMjAyMDIwO1xuJHNlY29uZGFyeTogIzYzNjU2OTtcbiRhY2NlbnQ6ICNGRjIwMjA7XG4kZ3JheTE6ICNDOEM5Q0Y7XG5cbiRtZWRpYVhzOiBcInNjcmVlbiBhbmQgKG1heC13aWR0aDogMzc1cHgpXCI7XG4kbWVkaWFQaG9uZTogXCJzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2Ny45cHgpXCI7XG4kbWVkaWFUYWJsZXQ6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweClcIjtcbiRtZWRpYVRhYmxldE9ubHk6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjQuOXB4KVwiO1xuJG1lZGlhVG9nZ2xlSGVhZGVyOiBcInNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNC45cHgpXCI7XG4kbWVkaWFEZXNrdG9wOiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KVwiO1xuJG1lZGlhRnVsbDogXCJzY3JlZW4gYW5kIChtaW4td2lkdGg6ICN7JG14V30pXCI7XG4iLCJAbWl4aW4gY29udGVudFdpZHRoIHtcbiAgbWF4LXdpZHRoOiAkbXhXO1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgJGd1dHRlcjtcbn1cblxuQG1peGluIGhvdmVyIHtcbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi5jdyB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gIEBpbXBvcnQgJ2hlYWRlcic7XG4gIEBpbXBvcnQgJ21haW4nO1xuICBAaW1wb3J0ICdmb290ZXInO1xufVxuIiwiJiA+IGhlYWRlciB7XG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG5cbiAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgei1pbmRleDogMTAwMDtcbiAgfVxuXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgY29sb3I6ICRhY2NlbnQ7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG5cbiAgICBhIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29sb3I6ICRhY2NlbnQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBwYWRkaW5nOiAxMXB4IDAgMThweCAwO1xuXG4gICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgIGNvbG9yOiAkc2Vjb25kYXJ5O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5vdmVybGF5IHtcbiAgICBAbWVkaWEgI3skbWVkaWFQaG9uZX0ge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgei1pbmRleDogOTAwMDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKCRwcmltYXJ5LC45NSk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIH1cbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG5cbiAgICAudG9nZ2xlLXRyaWdnZXIge1xuICAgICAgaGVpZ2h0OiA0NXB4O1xuICAgICAgd2lkdGg6IDUycHg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwcHg7XG4gICAgICByaWdodDogMHB4O1xuICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcblxuICAgICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm1lbnUtdG9nZ2xlOmNoZWNrZWQge1xuICAgIH4gLm92ZXJsYXkge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIH1cbiAgfVxufVxuXG4ubmF2LXByaW1hcnkge1xuICBmbGV4LWdyb3c6IDE7XG4gIEBtZWRpYSAjeyRtZWRpYVBob25lfSB7XG4gICAgPiBkaXYsXG4gICAgdWwge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIHVsIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgIG1hcmdpbi1yaWdodDogLTcuNXB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuICB9XG5cbiAgYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBwYWRkaW5nOiAxOHB4IDcuNXB4IDE4cHggMTcuNXB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgIGNvbG9yOiByZ2JhKCR3aGl0ZSwuNyk7XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JG1lZGlhVGFibGV0fSB7XG4gICAgICBjb2xvcjogJHNlY29uZGFyeTtcbiAgICAgIHBhZGRpbmc6IDExcHggNy41cHggMThweCAxNy41cHg7XG5cbiAgICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgICAgY29sb3I6ICRhY2NlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi50b2dnbGUtdHJpZ2dlciB7XG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbiIsIiYgPiBtYWluIHtcbiAgZmxleC1ncm93OiAxO1xuXG4gID4gZGl2IHtcbiAgICBAaW5jbHVkZSBjb250ZW50V2lkdGg7XG4gIH1cbn1cblxuLm1haW4tY29udGVudCB7XG4gIGNvbG9yOiAkc2Vjb25kYXJ5O1xuXG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICA+IGRpdiB7XG4gICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgd2lkdGg6IDI1JTtcbiAgICAgICAgZmxleDogMCAwIDI1JTtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJGd1dHRlciAvIDI7XG4gICAgICB9XG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIHBhZGRpbmctbGVmdDogJGd1dHRlciAvIDI7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCImID4gZm9vdGVyIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogJHByaW1hcnk7XG4gIHBhZGRpbmc6IDI0cHggMDtcblxuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gIH1cblxuICAuY29tcGFueS1uYW1lIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGEge1xuICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICBjb2xvcjogJGFjY2VudDtcbiAgICB9XG4gIH1cblxuICA+IGRpdiB7XG4gICAgQGluY2x1ZGUgY29udGVudFdpZHRoO1xuXG4gICAgPiBkaXYge1xuICAgICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdWwge1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBsaSB7XG4gICAgICBsaW5lLWhlaWdodDogMS40ZW07XG4gICAgfVxuICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgbGkge1xuICAgICAgICAgICsgbGk6YmVmb3JlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwifFwiO1xuICAgICAgICAgICAgcGFkZGluZzogMCA4cHg7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIucHJvamVjdC1saXN0IHtcblxufVxuXG4ubGlzdGluZy10YWJsZSB7XG4gIHRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIG1hcmdpbi10b3A6IDM4cHg7XG4gIH1cblxuICB0aGVhZCB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRwcmltYXJ5O1xuICB9XG5cbiAgdGgge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcGFkZGluZzogOHB4IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBpbmNsdWRlIGhvdmVyIHtcbiAgICAgIGNvbG9yOiAkYWNjZW50O1xuICAgICAgb3V0bGluZTogMDtcblxuICAgICAgZGl2OmFmdGVyIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBkaXYge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAkZ3V0dGVyO1xuXG4gICAgICAmOmFmdGVyIHtcbiAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgYm9yZGVyLXdpZHRoOiAwIDRweCA2cHggNHB4O1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICRwcmltYXJ5IHRyYW5zcGFyZW50O1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBvcGFjaXR5OiAuNTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4yNXM7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJlthcmlhLXNvcnQ9XCJhc2NlbmRpbmdcIl0sXG4gICAgJlthcmlhLXNvcnQ9XCJkZXNjZW5kaW5nXCJdIHtcbiAgICAgIGNvbG9yOiAkYWNjZW50O1xuICAgICAgZGl2OmFmdGVyIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmW2FyaWEtc29ydD1cImRlc2NlbmRpbmdcIl0ge1xuICAgICAgZGl2OmFmdGVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdGQge1xuICAgIHBhZGRpbmc6IDFlbSAwO1xuICAgICYsXG4gICAgaDIge1xuICAgICAgZm9udC1zaXplOiAxMXB4O1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgY29sb3I6ICRhY2NlbnQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbi5wcm9qZWN0LWltYWdlcyB7XG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgZmlndXJlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjRweDtcbiAgfVxuXG4gIGZpZ2NhcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogOXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAoMTEgLyA5KSAqIDFlbTtcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgY29sb3I6ICRzZWNvbmRhcnk7XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgbWFyZ2luOiAtI3skZ3V0dGVyIC8gMn07XG5cbiAgICBmaWd1cmUge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIHBhZGRpbmc6ICRndXR0ZXIgLyAyO1xuXG4gICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cblxuLnByb2plY3QtZGV0YWlsIHtcbiAgLy8gbWFpbiB7XG4gIC8vICAgZGlzcGxheTogZmxleDtcbiAgLy8gICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XG4gIC8vIH1cblxuICBtYWluIHtcbiAgICBuYXYge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAkc2Vjb25kYXJ5O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAkYWNjZW50O1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICAgICA6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTRweCk7XG4gICAgICAgIH1cblxuICAgICAgICA6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0cHgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm1haW4tY29udGVudCB7XG4gICAgPiBkaXY6bGFzdC1jaGlsZCB7XG4gICAgICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIGZsZXgtZ3JvdzogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLnByb2plY3QtYXJjaGl2ZSB7XG4gIG1haW4ge1xuICAgIG5hdiB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG5cbiAgICAgIGxpIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjJlbTtcblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBhIHtcbiAgICAgICAgY29sb3I6ICRzZWNvbmRhcnk7XG5cbiAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAkYWNjZW50O1xuICAgICAgICB9XG5cbiAgICAgICAgJi5hY3RpdmUge1xuICAgICAgICAgIGNvbG9yOiAkYWNjZW50O1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuXG4gICAgICAgICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmNvbnRhY3QtaW5mbyB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gIGEge1xuICAgIGNvbG9yOiAkc2Vjb25kYXJ5O1xuXG4gICAgQGluY2x1ZGUgaG92ZXIge1xuICAgICAgY29sb3I6ICRhY2NlbnQ7XG4gICAgfVxuICB9XG5cbiAgbGkuYWRkcmVzcyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG59XG5cblxuLmNvbnRhY3Qge1xuICBpZnJhbWUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4iLCIuaHAtZ3JpZCB7XG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICBncmlkLWF1dG8tcm93czogMWZyO1xuICAgIGdyaWQtYXV0by1mbG93OiBkZW5zZTtcbiAgICBncmlkLWdhcDogJGd1dHRlciAvIDI7XG4gIH1cblxuICA+IGRpdiB7XG4gICAgbWFyZ2luLWJvdHRvbTogJGd1dHRlciAvIDI7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWFEZXNrdG9wfSB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmciAxZnI7XG4gIH1cblxuICA+IC5kdyB7XG4gICAgZ3JpZC1jb2x1bW4tZW5kOiBzcGFuIDI7XG4gIH1cblxuICA+IC5kdCB7XG4gICAgZ3JpZC1yb3ctZW5kOiBzcGFuIDI7XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgfVxuXG4gIC5ocC1ibHVyYiB7XG4gICAgYmFja2dyb3VuZDogJGdyYXkxO1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIHBhZGRpbmc6ICRndXR0ZXIgLyAyO1xuXG4gICAgQG1lZGlhICN7JG1lZGlhRGVza3RvcH0ge1xuICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgIH1cbiAgfVxufVxuXG4ubWVudS1saW5rIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcblxuICA+IGRpdiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1zaGFkb3c6IDBweCAwcHggMnB4ICRibGFjaztcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbiAgICAvL3BhZGRpbmc6ICRndXR0ZXIgLyAyIDA7XG5cbiAgICBAbWVkaWEgI3skbWVkaWFUYWJsZXR9IHtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBob3ZlciB7XG4gICAgaW1nIHtcbiAgICAgIG9wYWNpdHk6IC41O1xuICAgIH1cbiAgICA+IGRpdiB7XG4gICAgICAvL29wYWNpdHk6IC43O1xuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSAjeyRtZWRpYVRhYmxldH0ge1xuICAgICYudGwge1xuICAgICAgPiBkaXYge1xuICAgICAgICB0b3A6ICRndXR0ZXIgLyA0O1xuICAgICAgICBsZWZ0OiAkZ3V0dGVyIC8gNDtcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5ibCB7XG4gICAgICA+IGRpdiB7XG4gICAgICAgIGJvdHRvbTogJGd1dHRlciAvIDQ7XG4gICAgICAgIGxlZnQ6ICRndXR0ZXIgLyA0O1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLnRyIHtcbiAgICAgID4gZGl2IHtcbiAgICAgICAgdG9wOiAkZ3V0dGVyIC8gNDtcbiAgICAgICAgcmlnaHQ6ICRndXR0ZXIgLyA0O1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5iciB7XG4gICAgICA+IGRpdiB7XG4gICAgICAgIGJvdHRvbTogJGd1dHRlciAvIDQ7XG4gICAgICAgIHJpZ2h0OiAkZ3V0dGVyIC8gNDtcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICAgICAgfVxuICAgIH1cblxuICAgICYuaG9yIHtcbiAgICAgID4gZGl2IHtcbiAgICAgICAgLy90cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuZGlhbG9nIHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIC8vYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHotaW5kZXg6IDk5OTk7XG4gIGRpc3BsYXk6IG5vbmU7XG5cbiAgLmRpYWxvZy1vcGVuICYge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4iXX0= */